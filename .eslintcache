[{"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/ChatBot/ChattyDisplay.tsx":"1","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Hooks/useInterval.js":"2","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Hooks/useViewport.js":"3","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/Profile.tsx":"4","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/Home.tsx":"5","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/ChatBot/helpers/useMessages.ts":"6","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/ChatBot/helpers/useButtons.tsx":"7","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/Login.tsx":"8","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/reportWebVitals.js":"9","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Chatty.tsx":"10","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Backend.ts":"11","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useButtons.tsx":"12","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useInterval.js":"13","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Profile.tsx":"14","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/usePriorContent.tsx":"15","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Navbar.tsx":"16","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Login.tsx":"17","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/App.tsx":"18","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Home.tsx":"19","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/ChattyDisplay.tsx":"20","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useViewport.js":"21","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Authorized.tsx":"22","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Register.tsx":"23","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Routes.tsx":"24","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useMessages.ts":"25","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/index.js":"26","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useChattyScript.tsx":"27","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useSpotifyAuth.tsx":"28","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Buttons/ButtonsContainer.tsx":"29","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesWrapper.tsx":"30","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesTypingCursor.tsx":"31","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesCurrent.tsx":"32","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesPast.tsx":"33","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesContainer.tsx":"34","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/MessagesProvider.tsx":"35","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Buttons/ButtonsPast.tsx":"36","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Buttons/ButtonsCurrent.tsx":"37","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsContainer.tsx":"38","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useMousePosition.js":"39","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsThumbnail.tsx":"40","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsTrack.tsx":"41"},{"size":4376,"mtime":1617311333380,"results":"42","hashOfConfig":"43"},{"size":457,"mtime":1614464632602,"results":"44","hashOfConfig":"43"},{"size":743,"mtime":1617312694780,"results":"45","hashOfConfig":"43"},{"size":826,"mtime":1617312536842,"results":"46","hashOfConfig":"43"},{"size":1324,"mtime":1617312694778,"results":"47","hashOfConfig":"43"},{"size":4859,"mtime":1617312694778,"results":"48","hashOfConfig":"43"},{"size":3035,"mtime":1617318716841,"results":"49","hashOfConfig":"43"},{"size":1911,"mtime":1617321900873,"results":"50","hashOfConfig":"43"},{"size":362,"mtime":1611021517246,"results":"51","hashOfConfig":"52"},{"size":2262,"mtime":1618174512000,"results":"53","hashOfConfig":"52"},{"size":2990,"mtime":1618603251931,"results":"54","hashOfConfig":"52"},{"size":3082,"mtime":1618878956364,"results":"55","hashOfConfig":"52"},{"size":457,"mtime":1618165493000,"results":"56","hashOfConfig":"52"},{"size":1079,"mtime":1618609061868,"results":"57","hashOfConfig":"52"},{"size":1930,"mtime":1618419220673,"results":"58","hashOfConfig":"52"},{"size":1241,"mtime":1618602829037,"results":"59","hashOfConfig":"52"},{"size":1915,"mtime":1618165493000,"results":"60","hashOfConfig":"52"},{"size":451,"mtime":1618165493000,"results":"61","hashOfConfig":"52"},{"size":1319,"mtime":1618602829036,"results":"62","hashOfConfig":"52"},{"size":1432,"mtime":1618165493000,"results":"63","hashOfConfig":"52"},{"size":743,"mtime":1618165493000,"results":"64","hashOfConfig":"52"},{"size":558,"mtime":1618165493000,"results":"65","hashOfConfig":"52"},{"size":2335,"mtime":1618419160289,"results":"66","hashOfConfig":"52"},{"size":765,"mtime":1618878956366,"results":"67","hashOfConfig":"52"},{"size":4842,"mtime":1618360142755,"results":"68","hashOfConfig":"52"},{"size":595,"mtime":1618535218568,"results":"69","hashOfConfig":"52"},{"size":3485,"mtime":1618419201653,"results":"70","hashOfConfig":"52"},{"size":5992,"mtime":1618184577000,"results":"71","hashOfConfig":"52"},{"size":635,"mtime":1618419119707,"results":"72","hashOfConfig":"52"},{"size":213,"mtime":1618419198462,"results":"73","hashOfConfig":"52"},{"size":858,"mtime":1618419198396,"results":"74","hashOfConfig":"52"},{"size":402,"mtime":1618419198214,"results":"75","hashOfConfig":"52"},{"size":696,"mtime":1618419318459,"results":"76","hashOfConfig":"52"},{"size":5725,"mtime":1618419433743,"results":"77","hashOfConfig":"52"},{"size":4154,"mtime":1618419241208,"results":"78","hashOfConfig":"52"},{"size":449,"mtime":1618419119821,"results":"79","hashOfConfig":"52"},{"size":451,"mtime":1618419119768,"results":"80","hashOfConfig":"52"},{"size":3326,"mtime":1619304274397,"results":"81","hashOfConfig":"52"},{"size":482,"mtime":1618956179931,"results":"82","hashOfConfig":"52"},{"size":2090,"mtime":1619200704817,"results":"83","hashOfConfig":"52"},{"size":1647,"mtime":1619204392420,"results":"84","hashOfConfig":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},"1i4blhn",{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"pu27ed",{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"112"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"112"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"112"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"109"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/ChatBot/ChattyDisplay.tsx",["184"],"import React, {useContext, useRef, useEffect} from \"react\";\nimport {MessagesContext} from \"./MessagesProvider\";\nimport MessageWrapper from \"./MessageWrapper\";\nimport ButtonWrapper from \"./ButtonWrapper\";\nimport Register from \"./Register\";\nimport useMessages from \"./helpers/useMessages\";\nimport useButtons from \"./helpers/useButtons\";\nimport {useHistory} from \"react-router-dom\";\nimport Backend from \"../../Backend\";\n// import useWindowDimensions from \"../../Hooks/useWindowDimensions\";\nimport useViewport from \"../../Hooks/useViewport\";\n\n//HOLDS ALL THE MESSAGE WRAPPER AND BUTTON WRAPPER COMPONENTS NEEDED TO BUILD THE \n//CONVERSATION CHATTY WILL HAVE WITH OUR USER\nfunction ChattyDisplay(): JSX.Element {\n  const scrollToBottomRef = useRef<any | null>();\n  const history = useHistory();\n  const {user, chattyMessagesPhase, displayedContent} = useContext(MessagesContext);\n  const {viewportHeight}  = useViewport();\n  const {initialButtons, proceedWithoutSpotifyButtons, tryAgainButtons} = useButtons();\n  const {\n    initialMessages,\n    whatIfNoSpotify,\n    spotifyAccountError,\n    proceedWithoutSpotify,\n    secondFailedAttempt,\n    spotifyAccountValid,\n    registerUserPartOne,\n    registerUserPartTwo,\n    registerUserPartThree,\n    registerUserPartFour,\n    registerUserPartFive,\n    registerUserPartSix,\n  } = useMessages();\n\n  //FINISHED FUNCTION THAT WILL WILL RUN ONCE CHATTY HAS SENT THE FINAL MESSAGE TO REDIRECT TO USER PROFILE\n  const redirectToProfile = (val: boolean) => {\n    if (val === true) history.push(\"/profile\");\n    try {\n      Backend.registerUser(user);\n    } catch(e) {\n      //add flash message functionality if registering user fails\n    }\n  };\n\n///////////////////////////////////////////////  CHATTY SCRIPT  /////////////////////////////////////////////////\n\n  //ALL POSSIBLE MESSAGE AND BUTTON OPTIONS THAT CHATTY CAN DISPLAY TO THE USER\n  //THROUGH THE CHATTYMESSAGEPHASE VARIABLE WE WILL NAVIGATE TO THE NECESSARY ITEM TO DISPLAY\n  const chattyScript = [\n    <MessageWrapper key={initialMessages.id} messages={initialMessages.messages}/>,\n    <ButtonWrapper key={initialButtons.id} buttons={initialButtons.buttons}/>,\n    <MessageWrapper key={whatIfNoSpotify.id} messages={whatIfNoSpotify.messages}/>,\n    <ButtonWrapper key={proceedWithoutSpotifyButtons.id} buttons={proceedWithoutSpotifyButtons.buttons}/>,\n    <MessageWrapper key={spotifyAccountError.id} messages={spotifyAccountError.messages}/>,\n    <ButtonWrapper key={tryAgainButtons.id} buttons={tryAgainButtons.buttons}/>,\n    <MessageWrapper key={proceedWithoutSpotify.id} messages={proceedWithoutSpotify.messages} incrementMessageValue={3}/>,\n    <MessageWrapper key={secondFailedAttempt.id} messages={secondFailedAttempt.messages} incrementMessageValue={2}/>,\n    <MessageWrapper key={spotifyAccountValid.id} messages={spotifyAccountValid.messages}/>,\n    <MessageWrapper key={registerUserPartOne.id} messages={registerUserPartOne.messages}/>,\n    <Register key={\"first name\"} input=\"first name\"/>,\n    <MessageWrapper key={registerUserPartTwo.id} messages={registerUserPartTwo.messages}/>,\n    <Register key={\"last name\"} input=\"last name\"/>,\n    <MessageWrapper key={registerUserPartThree.id} messages={registerUserPartThree.messages}/>,\n    <Register key={\"email\"} input=\"email\"/>,\n    <MessageWrapper key={registerUserPartFour.id} messages={registerUserPartFour.messages}/>,\n    <Register key={\"username\"} input=\"username\"/>,\n    <MessageWrapper key={registerUserPartFive.id} messages={registerUserPartFive.messages}/>,\n    <Register key={\"password\"} input=\"password\"/>,\n    <MessageWrapper key={registerUserPartSix.id} messages={registerUserPartSix.messages} finishedFunction={redirectToProfile}/>,\n  ]\n\n///////////////////////////////////////////////  RETURN JSX  /////////////////////////////////////////////////\n\n  return (\n    <div className=\"Chatty-Container\" >\n      <div className=\"Chatty\" style={{maxHeight: viewportHeight - 200}}>\n        <div className=\"Chatty-Left-Filler\"></div>\n        <div className=\"Chatty-Display\">\n          {displayedContent.map((item, index) => <div key={index}>{item}</div>)}\n          {chattyScript[chattyMessagesPhase]}\n          <div className=\"Chatty-MSG-Bottom-Filler\" ref={scrollToBottomRef}></div>\n        </div>\n        <div className=\"Chatty-Right-Filler\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChattyDisplay;","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Hooks/useInterval.js",["185","186"],"import React, {useRef, useEffect} from \"react\";\n\nconst useInterval = (callback, delay, myRef) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n\n    function tick() {\n      savedCallback.current();\n    };\n\n    if (delay !== null) {\n      myRef.current = setInterval(tick, delay);\n      return () => clearInterval(myRef.current);\n    };\n  }, [delay]);\n};\n\nexport default useInterval;","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Hooks/useViewport.js",[],"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/Profile.tsx",["187"],"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/Home.tsx",["188"],"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/ChatBot/helpers/useMessages.ts",["189"],"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/ChatBot/helpers/useButtons.tsx",[],"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/Login.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/reportWebVitals.js",[],["190","191"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Chatty.tsx",["192"],"import React, {useEffect, useContext, useState} from 'react';\nimport ChattyDisplay from './ChattyDisplay';\nimport {MessagesContext} from './MessagesProvider';\nimport useSpotifyAuth from './helpers/useSpotifyAuth';\nimport UseAnimations from 'react-useanimations';\nimport loading from 'react-useanimations/lib/loading';\n\nfunction Chatty(): JSX.Element {\n  const {displayedContent} = useContext(MessagesContext);\n  const {isConfirmedCrossSiteAttack, handleSpotifyAuthenticationError, retrieveSpotifyAccessTokens} = useSpotifyAuth();\n  const [firstLoad, setFirstLoad] = useState(false);\n  const [authLogic, setAuthLogic] = useState(false);\n  const search = window.location.search;\n  const params = new URLSearchParams(search);\n  const stateKey: string | null = params.get('state');\n  const authorizationError: string | null = params.get('error');\n\n////////////////////////////////////////////////////  RUN DISPLAYPREVIOUSMESSAGEHISTORY ON COMPONENT MOUNT CONDITIONALY  ////////////////////////////////////////////////////\n\n  useEffect(() => {\n    //HANDLE AUTHENTICATION AND DISPLAY APPROPRIATE PREVIOUS CHATTY MESSAGES\n    function displayPreviousMessageHistory() {\n      if (isConfirmedCrossSiteAttack()) return;\n  \n      if (authorizationError) {\n        handleSpotifyAuthenticationError()\n      } else {\n        retrieveSpotifyAccessTokens();\n      }\n    }\n    //IF STATEKEY IS TRUTHY THAN THE USER HAS ATTEMPTED TO AUTHENTICATE WITH SPOTIFY \n    //AND WE NEED TO DISPLAY WHERE HE/SHE LEFT OFF IN THE CHATTY CONVERSATION\n    if (stateKey) {\n      setAuthLogic(true);\n      displayPreviousMessageHistory()\n    //IF STATEKEY IS NULL THEN THE USER HASN'T ATTEMPTED TO AUTHENTICATE WITH SPOTIFY\n    //INITIATE CHATTY CONVERSATION AT THE BEGINNING\n    } else {\n      setFirstLoad(true);\n    }\n  }, [stateKey])\n\n////////////////////////////////////////////////////  RENDER LOADING SPINNER OR CHATTY DISPLAY  ////////////////////////////////////////////////////\n\n  return (\n    <>\n      {(authLogic && !displayedContent.length) && <UseAnimations className='Chatty-Loading-Spinner' animation={loading} size={200} style={{ padding: 100 }} strokeColor='#37f8ff' />}\n      {(firstLoad || displayedContent.length) && <ChattyDisplay/>}\n    </>\n  );\n};\n\nexport default Chatty;",["193","194"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Backend.ts",[],["195","196"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useButtons.tsx",[],["197","198"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useInterval.js",["199","200"],"import React, {useRef, useEffect} from 'react';\n\nconst useInterval = (callback, delay, myRef) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n\n    function tick() {\n      savedCallback.current();\n    };\n\n    if (delay !== null) {\n      myRef.current = setInterval(tick, delay);\n      return () => clearInterval(myRef.current);\n    };\n  }, [delay]);\n};\n\nexport default useInterval;",["201","202"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Profile.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/usePriorContent.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Navbar.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Login.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/App.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Home.tsx",["203"],"import React, {useEffect, useContext} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {MessagesContext} from './ChatBot/MessagesProvider';\n   //eslint-disable-next-line react-hooks/exhaustive-deps\n   \nconst Home: React.FC = () => {\n  const {resetPhases} = useContext(MessagesContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    const resetRegisterPhases = () => {\n      resetPhases();\n      // Backend.getCSRF();\n    }\n    resetRegisterPhases();\n    //THE BELOW COMMENT IS TO DISREGARD TYPESCRIPT ERROR FOR NOT INCLUDING resetPhases AS DEPENDECNY, BECAUSE IF WE DID IT WOULD THROW AND INFINITE CALLBACK LOOP\n \n  }, []);\n\n  function redirectToChatty() {\n    history.push('/register')\n  }\n\n  return (\n    <div className='Home-Container'>\n      <div className='Home-Upper-Box'>\n        <div className='Home-Header-Box'>\n          <h1>ACOUSTIC.IO</h1>\n        </div>\n        <div className='Home-Subheader-Box'>\n          <h5>A DIGITAL COMPANION TO KEEP YOU UP TO DATE WITH THE LATEST MUSIC RELEASES</h5>\n        </div>\n      </div>\n      <div className='Home-Lower-Box'>\n        <button className='home-main-button'>GET STARTED</button>\n        <button className='home-transition-element' onClick={redirectToChatty}>GET STARTED</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/ChattyDisplay.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useViewport.js",[],["204","205"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Authorized.tsx",["206","207"],"import React from 'react';\n\nconst Login: React.FC = () => {\n    let search = window.location.search;\n    let params = new URLSearchParams(search);\n    let code = params.get('code');\n    let state = params.get('state');\n    // console.log('code: ', code);\n    // console.log('state: ', state);\n\n\n////////////////////////////////////////////////////  RETURN  ////////////////////////////////////////////////////\n\n  return (\n    <>\n      <div className='Login-Box'>\n          <label>I'm authorized!:</label>\n        </div>\n    </>\n  );\n};\n\nexport default Login;","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Register.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Routes.tsx",["208"],"import React from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport Home from './Home';\nimport Chatty from './ChatBot/Chatty';\nimport Login from './Login';\nimport Profile from './Profile';\nimport PlaylistsContainer from './PlaylistsContainer'\nimport Authorized from './Authorized';\n\nconst Routes: React.FC = () => {\n\n  return (\n    <div className='main'>\n      <Switch>\n        <Route exact path='/'><Home/></Route>\n        <Route exact path='/register'><Chatty/></Route>\n        <Route exact path='/login'><Login /></Route>\n        <Route exact path='/profile'><PlaylistsContainer /></Route>\n        <Route exact path='/authorized'><Authorized /></Route>\n        <Redirect to='/'/>\n      </Switch>\n    </div>\n  );\n};\n\nexport default Routes;","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useMessages.ts",["209"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/index.js",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useChattyScript.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useSpotifyAuth.tsx",["210"],"import React, {useContext} from 'react';\nimport {MessagesContext} from '../MessagesProvider';\nimport Backend from '../../../Backend';\nimport usePriorContent from './usePriorContent';\n\ninterface updateChattyProperties {\n  priorChatContent: JSX.Element[]\n  incrementVal: number\n}\ninterface AccessTokenRequestProperties {\n  code: string | null\n  priorChatContent: JSX.Element[]\n  errorVal: number\n  successVal: number\n}\n\ninterface TokenObj {\n  access_token: string\n  error: null | string\n  expires_in: number\n  refresh_token: string\n  token_type: string\n}\n\nfunction useSpotifyAuth() {\n  const {updateUser, incrementMessagingPhase, addContentToBeDisplayed, updateStakeKey} = useContext(MessagesContext);\n  const {priorToFirstButton, priorToSecondButtton, priorToFirstButtonSecondAttempt, priorToSecondButtonSecondAttempt} = usePriorContent();\n  const search = window.location.search;\n  const params = new URLSearchParams(search);\n  const code: string | null  = params.get('code');\n  const stateKey: string | null = params.get('state');\n\n////////////////////////////////////////////////////  CHECKING FOR CROSS SITE ATTACKS BY CONFIRMING STATEKEY IS VALID ////////////////////////////////////////////////////\n\n  function isConfirmedCrossSiteAttack() {\n    const validStateKeys = ['spotify_auth_first_button', 'spotify_auth_second_button', 'spotify_auth_first_button_second_attempt', 'spotify_auth_second_button_second_attempt']\n    if (validStateKeys.indexOf(stateKey === null ? 'noStateKey' : stateKey) === -1) {\n      //i'll probably want to add some kind of message saying ther was an error and then try again\n      return true;\n    }\n    return false;\n  }\n\n////////////////////////////////////////////////////  HANDLING AUTHENTICATION ERROR  ////////////////////////////////////////////////////\n\n  function handleSpotifyAuthenticationError() {\n    if (stateKey === 'spotify_auth_first_button') {\n      //AUTHENTICATION ERROR FROM FIRST LOG INTO SPOTIFY BUTTON CLICKED\n      updateStakeKey('first_button')\n      updateChattyToDisplayWhereUserLastLeftOff({priorChatContent: priorToFirstButton, incrementVal: 4})\n    } else if (stateKey === 'spotify_auth_second_button') {\n      //AUTHENTICATION ERROR FROM SECOND LOG INTO SPOTIFY BUTTON CLICKED\n      updateStakeKey('second_button')\n      updateChattyToDisplayWhereUserLastLeftOff({priorChatContent: priorToSecondButtton, incrementVal: 4})\n    } else if (stateKey === 'spotify_auth_first_button_second_attempt') {\n      //AUTHENTICATION ERROR FROM SECOND ATTEPMT FROM FIRST LOG INTO SPOTIFY BUTTON CLICKED\n      updateChattyToDisplayWhereUserLastLeftOff({priorChatContent: priorToFirstButtonSecondAttempt, incrementVal: 7})\n    } else if (stateKey === 'spotify_auth_second_button_second_attempt') {\n      //AUTHENTICATION ERROR FROM SECOND ATTEMPT FROM SECOND LOG INTO SPOTIFY BUTTON CLICKED\n      updateChattyToDisplayWhereUserLastLeftOff({priorChatContent: priorToSecondButtonSecondAttempt, incrementVal: 7})\n    }\n  }\n\n////////////////////////////////////////////////////  AUTH SUCCESSFUL RETRIEVING ACCESS TOKENS  ////////////////////////////////////////////////////\n\n  function retrieveSpotifyAccessTokens() {\n    if (stateKey === 'spotify_auth_first_button') {\n      //AUTH SUCCESSFULL AFTER FIRST SPOTIFY BUTTON CLICKED\n      getAccessTokens({code, priorChatContent: priorToFirstButton, errorVal: 4, successVal: 8});\n    } else if (stateKey === 'spotify_auth_second_button') {\n      //AUTH SUCCESSFULL AFTER SECOND SPOTIFY BUTTON CLICKED\n      getAccessTokens({code, priorChatContent: priorToSecondButtton, errorVal: 4, successVal: 8});\n    } else if (stateKey === 'spotify_auth_first_button_second_attempt') {\n      //AUTH SUCCESSFULL AFTER FIRST SPOTIFY BUTTON CLICKED BUT SECOND ATTEMPT WAS MADE\n      getAccessTokens({code, priorChatContent: priorToFirstButtonSecondAttempt, errorVal: 7, successVal: 8});\n    } else if (stateKey === 'spotify_auth_second_button_second_attempt') {\n      //AUTH SUCCESSFULL AFTER SECOND SPOTIFY BUTTON CLICKED BUT SECOND ATTEMPT WAS MADE\n      getAccessTokens({code, priorChatContent: priorToSecondButtonSecondAttempt, errorVal: 7, successVal: 8});\n    }\n  }\n\n////////////////////////////////////////////////////  RENDER THE CORRECT PREVIOUS MESSAGES THE USER HAS ALREADY SEEN  ////////////////////////////////////////////////////\n\n  function updateChattyToDisplayWhereUserLastLeftOff(updateChattyObj: updateChattyProperties) {\n    addContentToBeDisplayed(updateChattyObj.priorChatContent)\n    incrementMessagingPhase(updateChattyObj.incrementVal)\n  }\n\n////////////////////////////////////////////////////  GET ACCESS TOKENS FROM SPOTIFY TO BE ABLE TO GET USER SPOTIFY DATA  ////////////////////////////////////////////////////\n\n  async function getAccessTokens(makeRequestObj: AccessTokenRequestProperties) {\n      const tokenObj: TokenObj = await Backend.requestAccessTokens(makeRequestObj.code)\n      //THERE IS GOING TO BE A REDIRECT TO CHATTY AFTER MAKING A REQUEST SO WE'LL NEED TO DISPLAY THE CHAT CONTENT THE USER HAS ALREADY SEEN,\n      //OTHERWISE WE'D HAVE TO START THE CHAT OVER\n      if (tokenObj.error) {\n        //HANDLING ACCESS TOKEN REQUEST ERROR\n        updateChattyToDisplayWhereUserLastLeftOff({priorChatContent: makeRequestObj.priorChatContent, incrementVal: makeRequestObj.errorVal})\n      } else {\n        //HANDLING ACCESS TOKEN REQUEST SUCCESS\n        updateChattyToDisplayWhereUserLastLeftOff({priorChatContent: makeRequestObj.priorChatContent, incrementVal: makeRequestObj.successVal})\n        updateUser('access_token', tokenObj.access_token)\n        updateUser('refresh_token', tokenObj.refresh_token)\n      }\n  }\n\n////////////////////////////////////////////////////  RETURN FUNCTIONS TO BE CALLED  ////////////////////////////////////////////////////\n\n  return {\n    getAccessTokens,\n    updateChattyToDisplayWhereUserLastLeftOff,\n    isConfirmedCrossSiteAttack,\n    handleSpotifyAuthenticationError,\n    retrieveSpotifyAccessTokens\n  }\n};\n\nexport default useSpotifyAuth;","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Buttons/ButtonsContainer.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesWrapper.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesTypingCursor.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesCurrent.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesPast.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesContainer.tsx",["211"],"import React, {useState, useRef, useEffect, useContext, useMemo} from 'react';\nimport useInterval from '../../../Hooks/useInterval';\nimport {MessagesContext} from '../MessagesProvider';\nimport MessagesWrapper from './MessagesWrapper';\nimport MesssagesTypingCursor from './MessagesTypingCursor';\nimport MessagesCurrent from './MessagesCurrent';\nimport MessagesPast from './MessagesPast';\n\n//DEFINING THE CONTRACT FOR THE VARIABLE TYPES THAT WILL BE PASSED IN VIA PROPS\ninterface Props {\n  messages: Array<string>\n  finishedFunction?: (val: boolean) => void\n  addToDisplayedContent?: boolean\n  incrementMessageValue?: number\n};\n\n//OUR COMPONENT THAT ACCEPTS THE APPROPRIATE MESSAGES NEEDED FOR OUR CHATTY RESPONSE AND\n//APPENDS THEM TO THE DOM ONE LETTER AT A TIME\nfunction MessagesContainer({messages, finishedFunction, addToDisplayedContent = true, incrementMessageValue = 1}: Props): JSX.Element {\n  const [displayedMessages, setDisplayedMessages] = useState<Array<string>>([]);\n  const [createMessage, setCreateMessage] = useState<string>('');\n  const [count, setCount] = useState<number>(0);\n  let messageCharLength = useRef(0)\n  let charLength = useRef(0);\n  let delayValue = useRef(100);\n  const [isRunning, setIsRunning] = useState<boolean>(true);\n  const [finishedMessages, setFinishedMessages] = useState<boolean>(false);\n  const [onLastMessage, setOnLastMessage] = useState<boolean>(false);\n  const {incrementMessagingPhase, addContentToBeDisplayed} = useContext(MessagesContext);\n  const useIntervalId = useRef<any | null>();\n  const scrollToBottomRef = useRef<any | null>();\n  const timeoutId = useRef<any | null>();\n  const typingCursor: string = ' \\u{258C}';\n\n  //SCROLL DOWN TO END OF MESSAGE TYPING TO KEEP MESSAGES IN VIEWPORT WHILE CHATTY IS TYPING\n  useEffect(() => {\n    function scrollingToBottom() {\n      scrollToBottomRef.current.scrollIntoView({behavior: 'smooth'});\n    };\n    if (count < messages.length && !finishedMessages) scrollingToBottom();\n  }, [count, finishedMessages, messages]);\n\n  //FUNCTION TO PASS TO OUR USEINTERVAL HOOK TO APPEND A LETTER AT A TIME TO CREATEMESSAGE\n  //IN ORDER TO CREATE THE LOOK AS IF OUR CHAT BOT WAS TYPING\n  function appendMessages() {\n    messageCharLength.current = messages[count].length;\n    const msgWithNewLetterAdded: string = messages[count].substring(charLength.current, charLength.current + 1);\n    const msgWithRemovedCursor = createMessage.slice(0, -2);\n    setCreateMessage(msgWithRemovedCursor + msgWithNewLetterAdded + typingCursor);\n    charLength.current = charLength.current + 1;\n    //CHANGING THE DELAY VALUE AFTER EACH LETTER APPENDED TO SCREEN IN ORDER TO TRY\n    //AND CREATE A MORE HUMAN VARIABLE TYPING SPEED\n    delayValue.current = Math.floor(Math.random() * 60) + 1;\n  };\n\n  // CALLING THE USEINTERVAL HOOK TO BE ABLE TO DYNAMICALLY ALTER THE DELAY FOR OUR INTERVAL\n  useInterval(appendMessages, isRunning ? delayValue.current : null, useIntervalId);\n\n  //SET TIMEOUT TO UPDATE ISRUNNING VARAIBLE TO TRUE AFTER A BRIEF PAUSE TO SPACE OUT CHATTY'S MESSAGES\n  useEffect(() => {\n\n    if (isRunning) return;\n    //IF ALL MESSAGES HAVE BEEN APPENDED TO OUR DOM DON'T NEED TO UPDATE COUNT OR CHANGE ISRUNNING\n    if (count >= messages.length && count !== 0) return;\n\n    timeoutId.current = setTimeout(() => {\n      setIsRunning(true);\n      //MOVED SETCOUNT TO BE INSIDE THIS TIMEOUT AS A WAY TO PREVENT AN INFINITE LOOP\n      //SINCE THIS EXECUTES RIGHT BEFORE COUNT IS SET BACK TO ZERO WHICH NEVER TRIGGERS\n      //THE CLEAR INTERVAL USE EFFECT\n      setCount(num => num + 1);\n    }, 500);\n\n    return () => clearTimeout(timeoutId.current);\n  },[isRunning, count, messages]);\n\n  //USEEFFECT THAT WILL RESET CREATEMESSAGE TO AN EMPTY STRING ONCE THE MESSAGE IS FINISHED\n  //AND THEN APPEND THAT MESSAGE TO DISPLAYEDMESSAGES TO APPEND TO THE DOM \n  useEffect(() => {\n\n    if (charLength.current >= messageCharLength.current && messageCharLength.current !== 0) {\n      const msgWithRemovedCursor = createMessage.slice(0, -2);\n      setDisplayedMessages(state => [...state, msgWithRemovedCursor]);\n      setCreateMessage('');\n      charLength.current = 0;\n      setIsRunning(false);\n    };\n  }, [setCount, charLength, messageCharLength, setDisplayedMessages, setCreateMessage, createMessage]);\n\n  //USEEFFECT THAT WILL CLEAR THE USEINTERVAL TIMER WHEN ALL MESSAGES PASSED IN TO OUR \n  //MESSAGE WRAPPER COMPONENT HAVE FINISHED APPENDING TO THE DOM\n  useEffect(() => {\n\n    if (count >= messages.length && count !== 0) {\n      clearInterval(useIntervalId.current);\n      setCount(0);\n      charLength.current = 0;\n      setFinishedMessages(true);\n      if (finishedFunction) finishedFunction(true);\n      if (addToDisplayedContent) {\n        addContentToBeDisplayed([<MessagesPast messages={messages}/>])\n        incrementMessagingPhase(incrementMessageValue);\n      }\n    };\n  }, [count, messages, finishedFunction, incrementMessagingPhase]);\n\n  //UPDATING ONLASTMESSAGE TO BE TRUE TO PREVENT TYPING CURSOR TO APPEAR AFTER THE LAST MESSAGE\n  useEffect(() => {\n\n    const preventTypingCursor = () => {\n      setOnLastMessage(true);\n    };\n\n    if (count === messages.length - 1) preventTypingCursor();\n  }, [count, setOnLastMessage, messages]);\n\n  const memoizedDisplayedMessages = useMemo(() => <MessagesPast messages={displayedMessages}/>, [displayedMessages])\n\n\n  // RETURNING JSX\n  return (\n    <MessagesWrapper>\n      {displayedMessages && memoizedDisplayedMessages}\n      <MessagesCurrent createMessage={createMessage}/>\n      <MesssagesTypingCursor onLastMessage={onLastMessage} scrollToBottomRef={scrollToBottomRef} isRunning={isRunning} typingCursor={typingCursor}/>\n    </MessagesWrapper>\n  );\n};\n\nexport default MessagesContainer;",["212","213"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/MessagesProvider.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Buttons/ButtonsPast.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Buttons/ButtonsCurrent.tsx",["214","215"],"import React, {useEffect, useRef} from 'react';\n\ninterface Props {\n  buttons: Array<JSX.Element>\n  scrollToBottomRef: any | null\n};\n\nfunction ButtonsCurrent({buttons, scrollToBottomRef}: Props): JSX.Element {\n\n  return (\n    <div className='Chatty-Button-Container' ref={scrollToBottomRef}>\n      {buttons && buttons.map((item, index) => <div key={index} className='Chatty-Button-Main'>{item}</div>)}\n    </div>\n  );\n};\n\nexport default ButtonsCurrent;","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsContainer.tsx",["216","217","218","219"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useMousePosition.js",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsThumbnail.tsx",["220"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsTrack.tsx",["221","222","223","224","225"],{"ruleId":"226","severity":1,"message":"227","line":1,"column":36,"nodeType":"228","messageId":"229","endLine":1,"endColumn":45},{"ruleId":"230","severity":1,"message":"231","line":1,"column":8,"nodeType":"228","messageId":"229","endLine":1,"endColumn":13},{"ruleId":"232","severity":1,"message":"233","line":20,"column":6,"nodeType":"234","endLine":20,"endColumn":13,"suggestions":"235"},{"ruleId":"226","severity":1,"message":"236","line":4,"column":11,"nodeType":"228","messageId":"229","endLine":4,"endColumn":16},{"ruleId":"226","severity":1,"message":"237","line":2,"column":9,"nodeType":"228","messageId":"229","endLine":2,"endColumn":13},{"ruleId":"226","severity":1,"message":"231","line":1,"column":8,"nodeType":"228","messageId":"229","endLine":1,"endColumn":13},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"232","severity":1,"message":"242","line":41,"column":6,"nodeType":"234","endLine":41,"endColumn":16,"suggestions":"243"},{"ruleId":"238","replacedBy":"244"},{"ruleId":"240","replacedBy":"245"},{"ruleId":"238","replacedBy":"246"},{"ruleId":"240","replacedBy":"247"},{"ruleId":"238","replacedBy":"248"},{"ruleId":"240","replacedBy":"249"},{"ruleId":"230","severity":1,"message":"231","line":1,"column":8,"nodeType":"228","messageId":"229","endLine":1,"endColumn":13},{"ruleId":"232","severity":1,"message":"233","line":20,"column":6,"nodeType":"234","endLine":20,"endColumn":13,"suggestions":"250"},{"ruleId":"238","replacedBy":"246"},{"ruleId":"240","replacedBy":"247"},{"ruleId":"232","severity":1,"message":"251","line":18,"column":6,"nodeType":"234","endLine":18,"endColumn":8,"suggestions":"252"},{"ruleId":"238","replacedBy":"253"},{"ruleId":"240","replacedBy":"254"},{"ruleId":"226","severity":1,"message":"255","line":6,"column":9,"nodeType":"228","messageId":"229","endLine":6,"endColumn":13},{"ruleId":"226","severity":1,"message":"256","line":7,"column":9,"nodeType":"228","messageId":"229","endLine":7,"endColumn":14},{"ruleId":"226","severity":1,"message":"257","line":6,"column":8,"nodeType":"228","messageId":"229","endLine":6,"endColumn":15},{"ruleId":"226","severity":1,"message":"231","line":1,"column":8,"nodeType":"228","messageId":"229","endLine":1,"endColumn":13},{"ruleId":"226","severity":1,"message":"231","line":1,"column":8,"nodeType":"228","messageId":"229","endLine":1,"endColumn":13},{"ruleId":"232","severity":1,"message":"258","line":105,"column":6,"nodeType":"234","endLine":105,"endColumn":66,"suggestions":"259"},{"ruleId":"238","replacedBy":"253"},{"ruleId":"240","replacedBy":"254"},{"ruleId":"226","severity":1,"message":"227","line":1,"column":16,"nodeType":"228","messageId":"229","endLine":1,"endColumn":25},{"ruleId":"226","severity":1,"message":"260","line":1,"column":27,"nodeType":"228","messageId":"229","endLine":1,"endColumn":33},{"ruleId":"226","severity":1,"message":"261","line":1,"column":16,"nodeType":"228","messageId":"229","endLine":1,"endColumn":26},{"ruleId":"226","severity":1,"message":"262","line":3,"column":9,"nodeType":"228","messageId":"229","endLine":3,"endColumn":24},{"ruleId":"226","severity":1,"message":"263","line":23,"column":10,"nodeType":"228","messageId":"229","endLine":23,"endColumn":11},{"ruleId":"226","severity":1,"message":"264","line":23,"column":13,"nodeType":"228","messageId":"229","endLine":23,"endColumn":14},{"ruleId":"226","severity":1,"message":"227","line":1,"column":26,"nodeType":"228","messageId":"229","endLine":1,"endColumn":35},{"ruleId":"226","severity":1,"message":"261","line":1,"column":16,"nodeType":"228","messageId":"229","endLine":1,"endColumn":26},{"ruleId":"226","severity":1,"message":"262","line":3,"column":9,"nodeType":"228","messageId":"229","endLine":3,"endColumn":24},{"ruleId":"226","severity":1,"message":"265","line":4,"column":8,"nodeType":"228","messageId":"229","endLine":4,"endColumn":24},{"ruleId":"226","severity":1,"message":"266","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":26},{"ruleId":"226","severity":1,"message":"267","line":6,"column":5,"nodeType":"228","messageId":"229","endLine":6,"endColumn":14},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-unused-vars","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'myRef'. Either include it or remove the dependency array.","ArrayExpression",["268"],"'IUser' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["269"],"no-negated-in-lhs",["270"],"React Hook useEffect has missing dependencies: 'authorizationError', 'handleSpotifyAuthenticationError', 'isConfirmedCrossSiteAttack', and 'retrieveSpotifyAccessTokens'. Either include them or remove the dependency array.",["271"],["269"],["270"],["269"],["270"],["269"],["270"],["272"],"React Hook useEffect has a missing dependency: 'resetPhases'. Either include it or remove the dependency array.",["273"],["269"],["270"],"'code' is assigned a value but never used.","'state' is assigned a value but never used.","'Profile' is defined but never used.","React Hook useEffect has missing dependencies: 'addContentToBeDisplayed', 'addToDisplayedContent', and 'incrementMessageValue'. Either include them or remove the dependency array.",["274"],"'useRef' is defined but never used.","'useContext' is defined but never used.","'MessagesContext' is defined but never used.","'x' is assigned a value but never used.","'y' is assigned a value but never used.","'useMousePosition' is defined but never used.","'PlaylistsThumbnail' is defined but never used.","'playlists' is assigned a value but never used.",{"desc":"275","fix":"276"},"no-global-assign","no-unsafe-negation",{"desc":"277","fix":"278"},{"desc":"275","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},"Update the dependencies array to be: [delay, myRef]",{"range":"284","text":"285"},"Update the dependencies array to be: [authorizationError, handleSpotifyAuthenticationError, isConfirmedCrossSiteAttack, retrieveSpotifyAccessTokens, stateKey]",{"range":"286","text":"287"},{"range":"288","text":"285"},"Update the dependencies array to be: [resetPhases]",{"range":"289","text":"290"},"Update the dependencies array to be: [count, messages, finishedFunction, incrementMessagingPhase, addToDisplayedContent, addContentToBeDisplayed, incrementMessageValue]",{"range":"291","text":"292"},[416,423],"[delay, myRef]",[1793,1803],"[authorizationError, handleSpotifyAuthenticationError, isConfirmedCrossSiteAttack, retrieveSpotifyAccessTokens, stateKey]",[416,423],[647,649],"[resetPhases]",[4865,4925],"[count, messages, finishedFunction, incrementMessagingPhase, addToDisplayedContent, addContentToBeDisplayed, incrementMessageValue]"]