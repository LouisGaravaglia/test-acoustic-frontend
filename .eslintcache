[{"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/ChatBot/ChattyDisplay.tsx":"1","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Hooks/useInterval.js":"2","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Hooks/useViewport.js":"3","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/Profile.tsx":"4","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/Home.tsx":"5","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/ChatBot/helpers/useMessages.ts":"6","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/ChatBot/helpers/useButtons.tsx":"7","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/Login.tsx":"8"},{"size":4376,"mtime":1617311333380,"results":"9","hashOfConfig":"10"},{"size":457,"mtime":1614464632602,"results":"11","hashOfConfig":"10"},{"size":743,"mtime":1617312694780,"results":"12","hashOfConfig":"10"},{"size":826,"mtime":1617312536842,"results":"13","hashOfConfig":"10"},{"size":1324,"mtime":1617312694778,"results":"14","hashOfConfig":"10"},{"size":4859,"mtime":1617312694778,"results":"15","hashOfConfig":"10"},{"size":3035,"mtime":1617318716841,"results":"16","hashOfConfig":"10"},{"size":1911,"mtime":1617321900873,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"1i4blhn",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/ChatBot/ChattyDisplay.tsx",["36"],"import React, {useContext, useRef, useEffect} from \"react\";\nimport {MessagesContext} from \"./MessagesProvider\";\nimport MessageWrapper from \"./MessageWrapper\";\nimport ButtonWrapper from \"./ButtonWrapper\";\nimport Register from \"./Register\";\nimport useMessages from \"./helpers/useMessages\";\nimport useButtons from \"./helpers/useButtons\";\nimport {useHistory} from \"react-router-dom\";\nimport Backend from \"../../Backend\";\n// import useWindowDimensions from \"../../Hooks/useWindowDimensions\";\nimport useViewport from \"../../Hooks/useViewport\";\n\n//HOLDS ALL THE MESSAGE WRAPPER AND BUTTON WRAPPER COMPONENTS NEEDED TO BUILD THE \n//CONVERSATION CHATTY WILL HAVE WITH OUR USER\nfunction ChattyDisplay(): JSX.Element {\n  const scrollToBottomRef = useRef<any | null>();\n  const history = useHistory();\n  const {user, chattyMessagesPhase, displayedContent} = useContext(MessagesContext);\n  const {viewportHeight}  = useViewport();\n  const {initialButtons, proceedWithoutSpotifyButtons, tryAgainButtons} = useButtons();\n  const {\n    initialMessages,\n    whatIfNoSpotify,\n    spotifyAccountError,\n    proceedWithoutSpotify,\n    secondFailedAttempt,\n    spotifyAccountValid,\n    registerUserPartOne,\n    registerUserPartTwo,\n    registerUserPartThree,\n    registerUserPartFour,\n    registerUserPartFive,\n    registerUserPartSix,\n  } = useMessages();\n\n  //FINISHED FUNCTION THAT WILL WILL RUN ONCE CHATTY HAS SENT THE FINAL MESSAGE TO REDIRECT TO USER PROFILE\n  const redirectToProfile = (val: boolean) => {\n    if (val === true) history.push(\"/profile\");\n    try {\n      Backend.registerUser(user);\n    } catch(e) {\n      //add flash message functionality if registering user fails\n    }\n  };\n\n///////////////////////////////////////////////  CHATTY SCRIPT  /////////////////////////////////////////////////\n\n  //ALL POSSIBLE MESSAGE AND BUTTON OPTIONS THAT CHATTY CAN DISPLAY TO THE USER\n  //THROUGH THE CHATTYMESSAGEPHASE VARIABLE WE WILL NAVIGATE TO THE NECESSARY ITEM TO DISPLAY\n  const chattyScript = [\n    <MessageWrapper key={initialMessages.id} messages={initialMessages.messages}/>,\n    <ButtonWrapper key={initialButtons.id} buttons={initialButtons.buttons}/>,\n    <MessageWrapper key={whatIfNoSpotify.id} messages={whatIfNoSpotify.messages}/>,\n    <ButtonWrapper key={proceedWithoutSpotifyButtons.id} buttons={proceedWithoutSpotifyButtons.buttons}/>,\n    <MessageWrapper key={spotifyAccountError.id} messages={spotifyAccountError.messages}/>,\n    <ButtonWrapper key={tryAgainButtons.id} buttons={tryAgainButtons.buttons}/>,\n    <MessageWrapper key={proceedWithoutSpotify.id} messages={proceedWithoutSpotify.messages} incrementMessageValue={3}/>,\n    <MessageWrapper key={secondFailedAttempt.id} messages={secondFailedAttempt.messages} incrementMessageValue={2}/>,\n    <MessageWrapper key={spotifyAccountValid.id} messages={spotifyAccountValid.messages}/>,\n    <MessageWrapper key={registerUserPartOne.id} messages={registerUserPartOne.messages}/>,\n    <Register key={\"first name\"} input=\"first name\"/>,\n    <MessageWrapper key={registerUserPartTwo.id} messages={registerUserPartTwo.messages}/>,\n    <Register key={\"last name\"} input=\"last name\"/>,\n    <MessageWrapper key={registerUserPartThree.id} messages={registerUserPartThree.messages}/>,\n    <Register key={\"email\"} input=\"email\"/>,\n    <MessageWrapper key={registerUserPartFour.id} messages={registerUserPartFour.messages}/>,\n    <Register key={\"username\"} input=\"username\"/>,\n    <MessageWrapper key={registerUserPartFive.id} messages={registerUserPartFive.messages}/>,\n    <Register key={\"password\"} input=\"password\"/>,\n    <MessageWrapper key={registerUserPartSix.id} messages={registerUserPartSix.messages} finishedFunction={redirectToProfile}/>,\n  ]\n\n///////////////////////////////////////////////  RETURN JSX  /////////////////////////////////////////////////\n\n  return (\n    <div className=\"Chatty-Container\" >\n      <div className=\"Chatty\" style={{maxHeight: viewportHeight - 200}}>\n        <div className=\"Chatty-Left-Filler\"></div>\n        <div className=\"Chatty-Display\">\n          {displayedContent.map((item, index) => <div key={index}>{item}</div>)}\n          {chattyScript[chattyMessagesPhase]}\n          <div className=\"Chatty-MSG-Bottom-Filler\" ref={scrollToBottomRef}></div>\n        </div>\n        <div className=\"Chatty-Right-Filler\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChattyDisplay;","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Hooks/useInterval.js",["37","38"],"import React, {useRef, useEffect} from \"react\";\n\nconst useInterval = (callback, delay, myRef) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n\n    function tick() {\n      savedCallback.current();\n    };\n\n    if (delay !== null) {\n      myRef.current = setInterval(tick, delay);\n      return () => clearInterval(myRef.current);\n    };\n  }, [delay]);\n};\n\nexport default useInterval;","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Hooks/useViewport.js",[],"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/Profile.tsx",["39"],"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/Home.tsx",["40"],"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/ChatBot/helpers/useMessages.ts",["41"],"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/ChatBot/helpers/useButtons.tsx",[],"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/Login.tsx",[],{"ruleId":"42","severity":1,"message":"43","line":1,"column":36,"nodeType":"44","messageId":"45","endLine":1,"endColumn":45},{"ruleId":"46","severity":1,"message":"47","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":13},{"ruleId":"48","severity":1,"message":"49","line":20,"column":6,"nodeType":"50","endLine":20,"endColumn":13,"suggestions":"51"},{"ruleId":"42","severity":1,"message":"52","line":4,"column":11,"nodeType":"44","messageId":"45","endLine":4,"endColumn":16},{"ruleId":"42","severity":1,"message":"53","line":2,"column":9,"nodeType":"44","messageId":"45","endLine":2,"endColumn":13},{"ruleId":"42","severity":1,"message":"47","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":13},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-unused-vars","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'myRef'. Either include it or remove the dependency array.","ArrayExpression",["54"],"'IUser' is defined but never used.","'Link' is defined but never used.",{"desc":"55","fix":"56"},"Update the dependencies array to be: [delay, myRef]",{"range":"57","text":"58"},[416,423],"[delay, myRef]"]