[{"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/ChatBot/ChattyDisplay.tsx":"1","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Hooks/useInterval.js":"2","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Hooks/useViewport.js":"3","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/Profile.tsx":"4","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/Home.tsx":"5","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/ChatBot/helpers/useMessages.ts":"6","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/ChatBot/helpers/useButtons.tsx":"7","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/Login.tsx":"8","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/reportWebVitals.js":"9","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Chatty.tsx":"10","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Backend.ts":"11","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useButtons.tsx":"12","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useInterval.js":"13","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Profile.tsx":"14","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/usePriorContent.tsx":"15","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Navbar.tsx":"16","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Login.tsx":"17","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/App.tsx":"18","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Home.tsx":"19","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/ChattyDisplay.tsx":"20","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useViewport.js":"21","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Authorized.tsx":"22","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Register.tsx":"23","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Routes.tsx":"24","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useMessages.ts":"25","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/index.js":"26","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useChattyScript.tsx":"27","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useSpotifyAuth.tsx":"28","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Buttons/ButtonsContainer.tsx":"29","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesWrapper.tsx":"30","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesTypingCursor.tsx":"31","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesCurrent.tsx":"32","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesPast.tsx":"33","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesContainer.tsx":"34","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/MessagesProvider.tsx":"35"},{"size":4376,"mtime":1617311333380,"results":"36","hashOfConfig":"37"},{"size":457,"mtime":1614464632602,"results":"38","hashOfConfig":"37"},{"size":743,"mtime":1617312694780,"results":"39","hashOfConfig":"37"},{"size":826,"mtime":1617312536842,"results":"40","hashOfConfig":"37"},{"size":1324,"mtime":1617312694778,"results":"41","hashOfConfig":"37"},{"size":4859,"mtime":1617312694778,"results":"42","hashOfConfig":"37"},{"size":3035,"mtime":1617318716841,"results":"43","hashOfConfig":"37"},{"size":1911,"mtime":1617321900873,"results":"44","hashOfConfig":"37"},{"size":362,"mtime":1611021517246,"results":"45","hashOfConfig":"46"},{"size":2262,"mtime":1618174512679,"results":"47","hashOfConfig":"46"},{"size":2984,"mtime":1618165493000,"results":"48","hashOfConfig":"46"},{"size":3364,"mtime":1618419170544,"results":"49","hashOfConfig":"46"},{"size":457,"mtime":1618165493000,"results":"50","hashOfConfig":"46"},{"size":973,"mtime":1618519875642,"results":"51","hashOfConfig":"46"},{"size":1930,"mtime":1618419220673,"results":"52","hashOfConfig":"46"},{"size":1176,"mtime":1618519449306,"results":"53","hashOfConfig":"46"},{"size":1915,"mtime":1618165493000,"results":"54","hashOfConfig":"46"},{"size":451,"mtime":1618165493000,"results":"55","hashOfConfig":"46"},{"size":1322,"mtime":1618184577000,"results":"56","hashOfConfig":"46"},{"size":1432,"mtime":1618165493000,"results":"57","hashOfConfig":"46"},{"size":743,"mtime":1618165493000,"results":"58","hashOfConfig":"46"},{"size":558,"mtime":1618165493000,"results":"59","hashOfConfig":"46"},{"size":2335,"mtime":1618419160289,"results":"60","hashOfConfig":"46"},{"size":703,"mtime":1618165493000,"results":"61","hashOfConfig":"46"},{"size":4842,"mtime":1618360142755,"results":"62","hashOfConfig":"46"},{"size":595,"mtime":1612052359000,"results":"63","hashOfConfig":"46"},{"size":3485,"mtime":1618419201653,"results":"64","hashOfConfig":"46"},{"size":5992,"mtime":1618175169737,"results":"65","hashOfConfig":"46"},{"size":635,"mtime":1618419119707,"results":"66","hashOfConfig":"46"},{"size":213,"mtime":1618419198462,"results":"67","hashOfConfig":"46"},{"size":858,"mtime":1618419198396,"results":"68","hashOfConfig":"46"},{"size":402,"mtime":1618419198214,"results":"69","hashOfConfig":"46"},{"size":696,"mtime":1618419318459,"results":"70","hashOfConfig":"46"},{"size":5725,"mtime":1618419433743,"results":"71","hashOfConfig":"46"},{"size":4154,"mtime":1618419241208,"results":"72","hashOfConfig":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},"1i4blhn",{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"pu27ed",{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/ChatBot/ChattyDisplay.tsx",["153"],"import React, {useContext, useRef, useEffect} from \"react\";\nimport {MessagesContext} from \"./MessagesProvider\";\nimport MessageWrapper from \"./MessageWrapper\";\nimport ButtonWrapper from \"./ButtonWrapper\";\nimport Register from \"./Register\";\nimport useMessages from \"./helpers/useMessages\";\nimport useButtons from \"./helpers/useButtons\";\nimport {useHistory} from \"react-router-dom\";\nimport Backend from \"../../Backend\";\n// import useWindowDimensions from \"../../Hooks/useWindowDimensions\";\nimport useViewport from \"../../Hooks/useViewport\";\n\n//HOLDS ALL THE MESSAGE WRAPPER AND BUTTON WRAPPER COMPONENTS NEEDED TO BUILD THE \n//CONVERSATION CHATTY WILL HAVE WITH OUR USER\nfunction ChattyDisplay(): JSX.Element {\n  const scrollToBottomRef = useRef<any | null>();\n  const history = useHistory();\n  const {user, chattyMessagesPhase, displayedContent} = useContext(MessagesContext);\n  const {viewportHeight}  = useViewport();\n  const {initialButtons, proceedWithoutSpotifyButtons, tryAgainButtons} = useButtons();\n  const {\n    initialMessages,\n    whatIfNoSpotify,\n    spotifyAccountError,\n    proceedWithoutSpotify,\n    secondFailedAttempt,\n    spotifyAccountValid,\n    registerUserPartOne,\n    registerUserPartTwo,\n    registerUserPartThree,\n    registerUserPartFour,\n    registerUserPartFive,\n    registerUserPartSix,\n  } = useMessages();\n\n  //FINISHED FUNCTION THAT WILL WILL RUN ONCE CHATTY HAS SENT THE FINAL MESSAGE TO REDIRECT TO USER PROFILE\n  const redirectToProfile = (val: boolean) => {\n    if (val === true) history.push(\"/profile\");\n    try {\n      Backend.registerUser(user);\n    } catch(e) {\n      //add flash message functionality if registering user fails\n    }\n  };\n\n///////////////////////////////////////////////  CHATTY SCRIPT  /////////////////////////////////////////////////\n\n  //ALL POSSIBLE MESSAGE AND BUTTON OPTIONS THAT CHATTY CAN DISPLAY TO THE USER\n  //THROUGH THE CHATTYMESSAGEPHASE VARIABLE WE WILL NAVIGATE TO THE NECESSARY ITEM TO DISPLAY\n  const chattyScript = [\n    <MessageWrapper key={initialMessages.id} messages={initialMessages.messages}/>,\n    <ButtonWrapper key={initialButtons.id} buttons={initialButtons.buttons}/>,\n    <MessageWrapper key={whatIfNoSpotify.id} messages={whatIfNoSpotify.messages}/>,\n    <ButtonWrapper key={proceedWithoutSpotifyButtons.id} buttons={proceedWithoutSpotifyButtons.buttons}/>,\n    <MessageWrapper key={spotifyAccountError.id} messages={spotifyAccountError.messages}/>,\n    <ButtonWrapper key={tryAgainButtons.id} buttons={tryAgainButtons.buttons}/>,\n    <MessageWrapper key={proceedWithoutSpotify.id} messages={proceedWithoutSpotify.messages} incrementMessageValue={3}/>,\n    <MessageWrapper key={secondFailedAttempt.id} messages={secondFailedAttempt.messages} incrementMessageValue={2}/>,\n    <MessageWrapper key={spotifyAccountValid.id} messages={spotifyAccountValid.messages}/>,\n    <MessageWrapper key={registerUserPartOne.id} messages={registerUserPartOne.messages}/>,\n    <Register key={\"first name\"} input=\"first name\"/>,\n    <MessageWrapper key={registerUserPartTwo.id} messages={registerUserPartTwo.messages}/>,\n    <Register key={\"last name\"} input=\"last name\"/>,\n    <MessageWrapper key={registerUserPartThree.id} messages={registerUserPartThree.messages}/>,\n    <Register key={\"email\"} input=\"email\"/>,\n    <MessageWrapper key={registerUserPartFour.id} messages={registerUserPartFour.messages}/>,\n    <Register key={\"username\"} input=\"username\"/>,\n    <MessageWrapper key={registerUserPartFive.id} messages={registerUserPartFive.messages}/>,\n    <Register key={\"password\"} input=\"password\"/>,\n    <MessageWrapper key={registerUserPartSix.id} messages={registerUserPartSix.messages} finishedFunction={redirectToProfile}/>,\n  ]\n\n///////////////////////////////////////////////  RETURN JSX  /////////////////////////////////////////////////\n\n  return (\n    <div className=\"Chatty-Container\" >\n      <div className=\"Chatty\" style={{maxHeight: viewportHeight - 200}}>\n        <div className=\"Chatty-Left-Filler\"></div>\n        <div className=\"Chatty-Display\">\n          {displayedContent.map((item, index) => <div key={index}>{item}</div>)}\n          {chattyScript[chattyMessagesPhase]}\n          <div className=\"Chatty-MSG-Bottom-Filler\" ref={scrollToBottomRef}></div>\n        </div>\n        <div className=\"Chatty-Right-Filler\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChattyDisplay;","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Hooks/useInterval.js",["154","155"],"import React, {useRef, useEffect} from \"react\";\n\nconst useInterval = (callback, delay, myRef) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n\n    function tick() {\n      savedCallback.current();\n    };\n\n    if (delay !== null) {\n      myRef.current = setInterval(tick, delay);\n      return () => clearInterval(myRef.current);\n    };\n  }, [delay]);\n};\n\nexport default useInterval;","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Hooks/useViewport.js",[],"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/Profile.tsx",["156"],"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/Home.tsx",["157"],"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/ChatBot/helpers/useMessages.ts",["158"],"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/ChatBot/helpers/useButtons.tsx",[],"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/Login.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/reportWebVitals.js",[],["159","160"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Chatty.tsx",["161"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Backend.ts",[],["162","163"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useButtons.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useInterval.js",["164","165"],"import React, {useRef, useEffect} from 'react';\n\nconst useInterval = (callback, delay, myRef) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n\n    function tick() {\n      savedCallback.current();\n    };\n\n    if (delay !== null) {\n      myRef.current = setInterval(tick, delay);\n      return () => clearInterval(myRef.current);\n    };\n  }, [delay]);\n};\n\nexport default useInterval;",["166","167"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Profile.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/usePriorContent.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Navbar.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Login.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/App.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Home.tsx",["168"],"import React, {useEffect, useContext} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {MessagesContext} from './ChatBot/MessagesProvider';\n   //eslint-disable-next-line react-hooks/exhaustive-deps\n   \nconst Home: React.FC = () => {\n  const {resetPhases} = useContext(MessagesContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    const resetRegisterPhases = () => {\n      resetPhases();\n      // Backend.getCSRF();\n    }\n    resetRegisterPhases();\n    //THE BELOW COMMENT IS TO DISREGARD TYPESCRIPT ERROR FOR NOT INCLUDING resetPhases AS DEPENDECNY, BECAUSE IF WE DID IT WOULD THROW AND INFINITE CALLBACK LOOP\n \n  }, []);\n\n  function redirectToChatty() {\n    history.push('/get-started')\n  }\n\n  return (\n    <div className='Home-Container'>\n      <div className='Home-Upper-Box'>\n        <div className='Home-Header-Box'>\n          <h1>ACOUSTIC.IO</h1>\n        </div>\n        <div className='Home-Subheader-Box'>\n          <h5>A DIGITAL COMPANION TO KEEP YOU UP TO DATE WITH THE LATEST MUSIC RELEASES</h5>\n        </div>\n      </div>\n      <div className='Home-Lower-Box'>\n        <button className='home-main-button'>GET STARTED</button>\n        <button className='home-transition-element' onClick={redirectToChatty}>GET STARTED</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/ChattyDisplay.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useViewport.js",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Authorized.tsx",["169","170"],"import React from 'react';\n\nconst Login: React.FC = () => {\n    let search = window.location.search;\n    let params = new URLSearchParams(search);\n    let code = params.get('code');\n    let state = params.get('state');\n    // console.log('code: ', code);\n    // console.log('state: ', state);\n\n\n////////////////////////////////////////////////////  RETURN  ////////////////////////////////////////////////////\n\n  return (\n    <>\n      <div className='Login-Box'>\n          <label>I'm authorized!:</label>\n        </div>\n    </>\n  );\n};\n\nexport default Login;",["171","172"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Register.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Routes.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useMessages.ts",["173"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/index.js",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useChattyScript.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useSpotifyAuth.tsx",["174"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Buttons/ButtonsContainer.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesWrapper.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesTypingCursor.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesCurrent.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesPast.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesContainer.tsx",["175"],"import React, {useState, useRef, useEffect, useContext, useMemo} from 'react';\nimport useInterval from '../../../Hooks/useInterval';\nimport {MessagesContext} from '../MessagesProvider';\nimport MessagesWrapper from './MessagesWrapper';\nimport MesssagesTypingCursor from './MessagesTypingCursor';\nimport MessagesCurrent from './MessagesCurrent';\nimport MessagesPast from './MessagesPast';\n\n//DEFINING THE CONTRACT FOR THE VARIABLE TYPES THAT WILL BE PASSED IN VIA PROPS\ninterface Props {\n  messages: Array<string>\n  finishedFunction?: (val: boolean) => void\n  addToDisplayedContent?: boolean\n  incrementMessageValue?: number\n};\n\n//OUR COMPONENT THAT ACCEPTS THE APPROPRIATE MESSAGES NEEDED FOR OUR CHATTY RESPONSE AND\n//APPENDS THEM TO THE DOM ONE LETTER AT A TIME\nfunction MessagesContainer({messages, finishedFunction, addToDisplayedContent = true, incrementMessageValue = 1}: Props): JSX.Element {\n  const [displayedMessages, setDisplayedMessages] = useState<Array<string>>([]);\n  const [createMessage, setCreateMessage] = useState<string>('');\n  const [count, setCount] = useState<number>(0);\n  let messageCharLength = useRef(0)\n  let charLength = useRef(0);\n  let delayValue = useRef(100);\n  const [isRunning, setIsRunning] = useState<boolean>(true);\n  const [finishedMessages, setFinishedMessages] = useState<boolean>(false);\n  const [onLastMessage, setOnLastMessage] = useState<boolean>(false);\n  const {incrementMessagingPhase, addContentToBeDisplayed} = useContext(MessagesContext);\n  const useIntervalId = useRef<any | null>();\n  const scrollToBottomRef = useRef<any | null>();\n  const timeoutId = useRef<any | null>();\n  const typingCursor: string = ' \\u{258C}';\n\n  //SCROLL DOWN TO END OF MESSAGE TYPING TO KEEP MESSAGES IN VIEWPORT WHILE CHATTY IS TYPING\n  useEffect(() => {\n    function scrollingToBottom() {\n      scrollToBottomRef.current.scrollIntoView({behavior: 'smooth'});\n    };\n    if (count < messages.length && !finishedMessages) scrollingToBottom();\n  }, [count, finishedMessages, messages]);\n\n  //FUNCTION TO PASS TO OUR USEINTERVAL HOOK TO APPEND A LETTER AT A TIME TO CREATEMESSAGE\n  //IN ORDER TO CREATE THE LOOK AS IF OUR CHAT BOT WAS TYPING\n  function appendMessages() {\n    messageCharLength.current = messages[count].length;\n    const msgWithNewLetterAdded: string = messages[count].substring(charLength.current, charLength.current + 1);\n    const msgWithRemovedCursor = createMessage.slice(0, -2);\n    setCreateMessage(msgWithRemovedCursor + msgWithNewLetterAdded + typingCursor);\n    charLength.current = charLength.current + 1;\n    //CHANGING THE DELAY VALUE AFTER EACH LETTER APPENDED TO SCREEN IN ORDER TO TRY\n    //AND CREATE A MORE HUMAN VARIABLE TYPING SPEED\n    delayValue.current = Math.floor(Math.random() * 60) + 1;\n  };\n\n  // CALLING THE USEINTERVAL HOOK TO BE ABLE TO DYNAMICALLY ALTER THE DELAY FOR OUR INTERVAL\n  useInterval(appendMessages, isRunning ? delayValue.current : null, useIntervalId);\n\n  //SET TIMEOUT TO UPDATE ISRUNNING VARAIBLE TO TRUE AFTER A BRIEF PAUSE TO SPACE OUT CHATTY'S MESSAGES\n  useEffect(() => {\n\n    if (isRunning) return;\n    //IF ALL MESSAGES HAVE BEEN APPENDED TO OUR DOM DON'T NEED TO UPDATE COUNT OR CHANGE ISRUNNING\n    if (count >= messages.length && count !== 0) return;\n\n    timeoutId.current = setTimeout(() => {\n      setIsRunning(true);\n      //MOVED SETCOUNT TO BE INSIDE THIS TIMEOUT AS A WAY TO PREVENT AN INFINITE LOOP\n      //SINCE THIS EXECUTES RIGHT BEFORE COUNT IS SET BACK TO ZERO WHICH NEVER TRIGGERS\n      //THE CLEAR INTERVAL USE EFFECT\n      setCount(num => num + 1);\n    }, 500);\n\n    return () => clearTimeout(timeoutId.current);\n  },[isRunning, count, messages]);\n\n  //USEEFFECT THAT WILL RESET CREATEMESSAGE TO AN EMPTY STRING ONCE THE MESSAGE IS FINISHED\n  //AND THEN APPEND THAT MESSAGE TO DISPLAYEDMESSAGES TO APPEND TO THE DOM \n  useEffect(() => {\n\n    if (charLength.current >= messageCharLength.current && messageCharLength.current !== 0) {\n      const msgWithRemovedCursor = createMessage.slice(0, -2);\n      setDisplayedMessages(state => [...state, msgWithRemovedCursor]);\n      setCreateMessage('');\n      charLength.current = 0;\n      setIsRunning(false);\n    };\n  }, [setCount, charLength, messageCharLength, setDisplayedMessages, setCreateMessage, createMessage]);\n\n  //USEEFFECT THAT WILL CLEAR THE USEINTERVAL TIMER WHEN ALL MESSAGES PASSED IN TO OUR \n  //MESSAGE WRAPPER COMPONENT HAVE FINISHED APPENDING TO THE DOM\n  useEffect(() => {\n\n    if (count >= messages.length && count !== 0) {\n      clearInterval(useIntervalId.current);\n      setCount(0);\n      charLength.current = 0;\n      setFinishedMessages(true);\n      if (finishedFunction) finishedFunction(true);\n      if (addToDisplayedContent) {\n        addContentToBeDisplayed([<MessagesPast messages={messages}/>])\n        incrementMessagingPhase(incrementMessageValue);\n      }\n    };\n  }, [count, messages, finishedFunction, incrementMessagingPhase]);\n\n  //UPDATING ONLASTMESSAGE TO BE TRUE TO PREVENT TYPING CURSOR TO APPEAR AFTER THE LAST MESSAGE\n  useEffect(() => {\n\n    const preventTypingCursor = () => {\n      setOnLastMessage(true);\n    };\n\n    if (count === messages.length - 1) preventTypingCursor();\n  }, [count, setOnLastMessage, messages]);\n\n  const memoizedDisplayedMessages = useMemo(() => <MessagesPast messages={displayedMessages}/>, [displayedMessages])\n\n\n  // RETURNING JSX\n  return (\n    <MessagesWrapper>\n      {displayedMessages && memoizedDisplayedMessages}\n      <MessagesCurrent createMessage={createMessage}/>\n      <MesssagesTypingCursor onLastMessage={onLastMessage} scrollToBottomRef={scrollToBottomRef} isRunning={isRunning} typingCursor={typingCursor}/>\n    </MessagesWrapper>\n  );\n};\n\nexport default MessagesContainer;","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/MessagesProvider.tsx",[],{"ruleId":"176","severity":1,"message":"177","line":1,"column":36,"nodeType":"178","messageId":"179","endLine":1,"endColumn":45},{"ruleId":"180","severity":1,"message":"181","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"182","severity":1,"message":"183","line":20,"column":6,"nodeType":"184","endLine":20,"endColumn":13,"suggestions":"185"},{"ruleId":"176","severity":1,"message":"186","line":4,"column":11,"nodeType":"178","messageId":"179","endLine":4,"endColumn":16},{"ruleId":"176","severity":1,"message":"187","line":2,"column":9,"nodeType":"178","messageId":"179","endLine":2,"endColumn":13},{"ruleId":"176","severity":1,"message":"181","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"182","severity":1,"message":"192","line":41,"column":6,"nodeType":"184","endLine":41,"endColumn":16,"suggestions":"193"},{"ruleId":"188","replacedBy":"194"},{"ruleId":"190","replacedBy":"195"},{"ruleId":"180","severity":1,"message":"181","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"182","severity":1,"message":"183","line":20,"column":6,"nodeType":"184","endLine":20,"endColumn":13,"suggestions":"196"},{"ruleId":"188","replacedBy":"194"},{"ruleId":"190","replacedBy":"195"},{"ruleId":"182","severity":1,"message":"197","line":18,"column":6,"nodeType":"184","endLine":18,"endColumn":8,"suggestions":"198"},{"ruleId":"176","severity":1,"message":"199","line":6,"column":9,"nodeType":"178","messageId":"179","endLine":6,"endColumn":13},{"ruleId":"176","severity":1,"message":"200","line":7,"column":9,"nodeType":"178","messageId":"179","endLine":7,"endColumn":14},{"ruleId":"188","replacedBy":"201"},{"ruleId":"190","replacedBy":"202"},{"ruleId":"176","severity":1,"message":"181","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"176","severity":1,"message":"181","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"182","severity":1,"message":"203","line":105,"column":6,"nodeType":"184","endLine":105,"endColumn":66,"suggestions":"204"},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-unused-vars","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'myRef'. Either include it or remove the dependency array.","ArrayExpression",["205"],"'IUser' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["206"],"no-negated-in-lhs",["207"],"React Hook useEffect has missing dependencies: 'authorizationError', 'handleSpotifyAuthenticationError', 'isConfirmedCrossSiteAttack', and 'retrieveSpotifyAccessTokens'. Either include them or remove the dependency array.",["208"],["206"],["207"],["209"],"React Hook useEffect has a missing dependency: 'resetPhases'. Either include it or remove the dependency array.",["210"],"'code' is assigned a value but never used.","'state' is assigned a value but never used.",["206"],["207"],"React Hook useEffect has missing dependencies: 'addContentToBeDisplayed', 'addToDisplayedContent', and 'incrementMessageValue'. Either include them or remove the dependency array.",["211"],{"desc":"212","fix":"213"},"no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"212","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},"Update the dependencies array to be: [delay, myRef]",{"range":"221","text":"222"},"Update the dependencies array to be: [authorizationError, handleSpotifyAuthenticationError, isConfirmedCrossSiteAttack, retrieveSpotifyAccessTokens, stateKey]",{"range":"223","text":"224"},{"range":"225","text":"222"},"Update the dependencies array to be: [resetPhases]",{"range":"226","text":"227"},"Update the dependencies array to be: [count, messages, finishedFunction, incrementMessagingPhase, addToDisplayedContent, addContentToBeDisplayed, incrementMessageValue]",{"range":"228","text":"229"},[416,423],"[delay, myRef]",[1793,1803],"[authorizationError, handleSpotifyAuthenticationError, isConfirmedCrossSiteAttack, retrieveSpotifyAccessTokens, stateKey]",[416,423],[647,649],"[resetPhases]",[4865,4925],"[count, messages, finishedFunction, incrementMessagingPhase, addToDisplayedContent, addContentToBeDisplayed, incrementMessageValue]"]