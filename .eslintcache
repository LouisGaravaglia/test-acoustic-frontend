[{"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsTitleScrollContainer.tsx":"1","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsTitleScroll.tsx":"2","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useElementOnScreen.tsx":"3","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsContainer.tsx":"4","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Home.tsx":"5","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsTrack.tsx":"6","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsCarousel.tsx":"7","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsCarouselContainer.tsx":"8","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/App.tsx":"9","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/MessagesProvider.tsx":"10","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Routes.tsx":"11","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Navbar.tsx":"12","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Chatty.tsx":"13","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/ChattyDisplay.tsx":"14","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useSpotifyAuth.tsx":"15","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useChattyScript.tsx":"16","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesContainer.tsx":"17","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Buttons/ButtonsPast.tsx":"18","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useInterval.js":"19","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useMessages.ts":"20","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useButtons.tsx":"21","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/index.js":"22","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useMousePosition.js":"23","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Buttons/ButtonsContainer.tsx":"24","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesTypingCursor.tsx":"25","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Buttons/ButtonsCurrent.tsx":"26","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsThumbnail.tsx":"27","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesCurrent.tsx":"28","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Register.tsx":"29","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/reportWebVitals.js":"30","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/usePriorContent.tsx":"31","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesWrapper.tsx":"32","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Backend.ts":"33"},{"size":3323,"mtime":1619634239150,"results":"34","hashOfConfig":"35"},{"size":3357,"mtime":1619635608398,"results":"36","hashOfConfig":"35"},{"size":1385,"mtime":1619544143460,"results":"37","hashOfConfig":"35"},{"size":4004,"mtime":1619633117458,"results":"38","hashOfConfig":"35"},{"size":1718,"mtime":1620265208608,"results":"39","hashOfConfig":"35"},{"size":3600,"mtime":1619638112084,"results":"40","hashOfConfig":"35"},{"size":4042,"mtime":1619660797776,"results":"41","hashOfConfig":"35"},{"size":2310,"mtime":1619635593693,"results":"42","hashOfConfig":"35"},{"size":451,"mtime":1618165493000,"results":"43","hashOfConfig":"35"},{"size":4154,"mtime":1618419241208,"results":"44","hashOfConfig":"35"},{"size":775,"mtime":1619375013222,"results":"45","hashOfConfig":"35"},{"size":1304,"mtime":1620264791182,"results":"46","hashOfConfig":"35"},{"size":2262,"mtime":1618174512000,"results":"47","hashOfConfig":"35"},{"size":1432,"mtime":1618165493000,"results":"48","hashOfConfig":"35"},{"size":5992,"mtime":1618184577000,"results":"49","hashOfConfig":"35"},{"size":3493,"mtime":1619316026969,"results":"50","hashOfConfig":"35"},{"size":5725,"mtime":1618419433743,"results":"51","hashOfConfig":"35"},{"size":473,"mtime":1619389673713,"results":"52","hashOfConfig":"35"},{"size":457,"mtime":1618165493000,"results":"53","hashOfConfig":"35"},{"size":5140,"mtime":1620253066991,"results":"54","hashOfConfig":"35"},{"size":3237,"mtime":1619661129946,"results":"55","hashOfConfig":"35"},{"size":595,"mtime":1618535218568,"results":"56","hashOfConfig":"35"},{"size":482,"mtime":1618956179931,"results":"57","hashOfConfig":"35"},{"size":635,"mtime":1618419119707,"results":"58","hashOfConfig":"35"},{"size":858,"mtime":1618419198396,"results":"59","hashOfConfig":"35"},{"size":415,"mtime":1619358924101,"results":"60","hashOfConfig":"35"},{"size":2090,"mtime":1619478072131,"results":"61","hashOfConfig":"35"},{"size":402,"mtime":1618419198214,"results":"62","hashOfConfig":"35"},{"size":2585,"mtime":1620191215058,"results":"63","hashOfConfig":"35"},{"size":362,"mtime":1611021517000,"results":"64","hashOfConfig":"35"},{"size":1898,"mtime":1619360433269,"results":"65","hashOfConfig":"35"},{"size":213,"mtime":1618419198462,"results":"66","hashOfConfig":"35"},{"size":2990,"mtime":1618603251931,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},"pu27ed",{"filePath":"72","messages":"73","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"75"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"71"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"75"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"71"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"100"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"75"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"75"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsTitleScrollContainer.tsx",["152","153","154","155","156","157","158","159","160","161","162"],"import React, {useState, useRef, useEffect} from 'react';\nimport PlaylistsTitleScroll from './PlaylistsTitleScroll';\nimport useViewport from '../Hooks/useViewport';\nlet playlists =  require('../fakeData/playlist.json');\n\ninterface Props {\n  selectedPlaylistIndex: number\n}\nfunction PlaylistsTitleScrollContainer({selectedPlaylistIndex}: Props): JSX.Element {\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n  const [parentFinishedMounting, setParentFinishedMounting] = useState<boolean>(false);\n  const [selectedPlaylistRef, setSelectedPlaylistRef] = useState<any | null>(null);\n  const {viewportWidth}  = useViewport();\n  const titleRef = useRef<any | null>(null);\n  const wrapperRef = useRef<any | null>(null);\n\n  function observeTitlesInView(index: number) {\n    console.log('index in view: ', index);\n    \n  }\n\n  // function handleInViewport(titleRef: any | null, index: number) {\n  //   console.log(\"hit\");\n    \n  //   if (titleRef.current === null) return;\n  //   const {left, right} = titleRef.current.getBoundingClientRect();\n\n  //   const viewportMidPoint = viewportWidth / 2;\n  //   // const enteredFrame = !!entry?.isIntersecting && (left < viewportMidPoint && right > viewportMidPoint);\n  //   const enteredFrame = (left < viewportMidPoint && right > viewportMidPoint);\n\n  //   setIsVisible(enteredFrame)\n  //   console.log(`enteredFrame ${index}`, enteredFrame);\n    \n  //   console.log(`LEFT ${index}`, left);\n\n  //   console.log('midpoint', viewportMidPoint);\n  //   console.log(`RIGHT ${index}`, right);\n    \n  //   // if (enteredFrame) observeTitlesInView(index);\n  //   // return (top + offset) >= 0 && (top - offset) <= window.innerHeight;\n  // }\n\n  // useEffect(() => {\n\n  //   const scrollPastCategories = () => {\n  //     DanceabilitySearchRef.current.scrollIntoView({behavior: \"smooth\"});\n  //   }\n  //   scrollPastCategories();\n  // }, [selectedTitle]);\n\n  // useEffect(() => {\n  //   function parentDidMount() {\n  //     setParentFinishedMounting(true)\n  //   }\n\n  //   parentDidMount();\n  // }, [])\n\n  \n  function handleScrollToSelectedTitle(titleRef: any | null) {\n    console.log('handleScroll', titleRef);\n    if (titleRef.current !== null) {\n      console.log('offsetLeft', titleRef.current.offsetLeft);\n      //TODO: MAKE MEDIA QUERY THAT LOWER'S THE AMOUNT SUBTRACTING FROM TITLEREF OFFSET VALUE\n      wrapperRef.current.scroll({left: titleRef.current.offsetLeft - 300, behavior: 'smooth'});\n    }\n  }\n\n\n  //   useEffect(() => {\n  //     console.log(\"trying to scroll\");\n  //     // wrapperRef.current.scroll({left: 820, behavior: 'smooth'});\n  //     // if (titleRef.current !== null) titleRef.current.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'start' });\n\n  // }, [selectedPlaylistRef])\n\n  \n\n  return (\n    // <div className=\"scrollingContainer\">\n\n    <div className=\"scrolling-wrapper\" ref={wrapperRef}>\n      <div className='card' ><h2 ></h2></div>\n      {playlists.map((playlist: any, index: any) => <PlaylistsTitleScroll key={index} index={index} playlist={playlist} parentFinishedMounting={parentFinishedMounting} selectedPlaylistIndex={selectedPlaylistIndex} handleScrollToSelectedTitle={handleScrollToSelectedTitle}/>)}\n      <div className='card' ><h2 ></h2></div>\n\n    </div>\n    // </div>\n\n  );\n};\n\nexport default PlaylistsTitleScrollContainer;",["163","164"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsTitleScroll.tsx",["165","166","167","168","169","170","171","172","173"],"import React, {useState, useRef, useEffect, useMemo, useCallback} from 'react';\nimport useViewport from '../Hooks/useViewport';\nimport useElementOnScreen from '../Hooks/useElementOnScreen';\nlet playlists =  require('../fakeData/playlist.json');\n\ninterface Props {\n  playlist: {\n    \"id\": string\n    \"name\": string\n  }\n  index: number\n\n  parentFinishedMounting: boolean\n  selectedPlaylistIndex: number\n  handleScrollToSelectedTitle: (titleRef: any | null) => void\n}\n\n// interface IUseElementOnScreen {\n//   containerRef: React.Ref<HTMLInputElement>\n//   isVisible: boolean\n// }\n\nfunction PlaylistsTitleScroll({playlist, index, parentFinishedMounting, selectedPlaylistIndex, handleScrollToSelectedTitle}: Props): JSX.Element {\n  // const [isVisible, setIsVisible] = useState<boolean>(false);\n  const titleRef = useRef<any | null>(null);\n  let leftSideOfTitleDiv: number = 0;\n  let rightSideOfTitleDiv: number = 0;\n  if (titleRef.current !== null) {\n    const {left, right} = titleRef.current.getBoundingClientRect();\n    leftSideOfTitleDiv = left;\n    rightSideOfTitleDiv = right;\n  }\n  const {viewportWidth}  = useViewport();\n  const viewportMidPoint = viewportWidth / 2;\n  // const entry = useElementOnScreen(titleRef, {\n  //   // root: document.querySelector('.scrolling-wrapper'),\n  //   rootMargin: \"0px -400px\",\n  //   threshold: 0.9\n  // });\n  // const isVisible = !!entry?.isIntersecting;\n  const entry = useElementOnScreen(titleRef, {\n    root: document.querySelector('.scrolling-wrapper'),\n    rootMargin: \"0px -300px\",\n    threshold: 0.40\n  });\n  const isVisible = !!entry?.isIntersecting;\n\n    useEffect(() => {\n      const leftVal = titleRef.current.getBoundingClientRect().left;\n\n      if(selectedPlaylistIndex === index) handleScrollToSelectedTitle(titleRef);\n    }, [titleRef, selectedPlaylistIndex])\n\n    // handleInViewport(titleRef);\n\n\n    // const enteredFrame = !!entry?.isIntersecting && (top > 143 && top < 144);\n  // titleRef.current = index;\n\n    // useEffect(() => {\n    //   function selectedTitleViaScroll() {\n    //     if (!parentFinishedMounting) return;\n        \n    //     if (isVisible) {\n    //       updatePlaylistQueue(index);\n    //       console.log(`selected ${index}`);\n    //     } else {\n    //       updatePlaylistSelectedTitle(index);\n    //       console.log(`unselected ${index}`);\n          \n    //     }\n\n    //   }\n\n    //   selectedTitleViaScroll();\n    // }, [isVisible, index])\n\n\n      // function isInViewport(offset = 0) {\n      //   console.log(\"hit\");\n        \n      //   if (!titleRef) return false;\n      //   const {left, right} = titleRef.current.getBoundingClientRect();\n      //   // const enteredFrame = !!entry?.isIntersecting && (left < viewportMidPoint && right > viewportMidPoint);\n      //   const enteredFrame = (left < viewportMidPoint && right > viewportMidPoint);\n\n      //   setIsVisible(enteredFrame)\n      //   console.log(`index ${index}`, left);\n      //   console.log('midpoint', viewportMidPoint);\n        \n      //   if (enteredFrame) observeTitlesInView(index);\n      //   // return (top + offset) >= 0 && (top - offset) <= window.innerHeight;\n      // }\n\n\n// console.log(\"isVisible: \", isVisible);\n\n\n\n  return (\n      <div className={isVisible ? 'Playlists-Featured-Title' : 'card'} ref={titleRef} ><h2 >{playlist.name}</h2></div>\n  );\n};\n\nexport default PlaylistsTitleScroll;",["174","175"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useElementOnScreen.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsContainer.tsx",["176","177","178","179","180","181","182","183","184","185","186","187"],"import React, {useContext, useState} from 'react';\nimport { IoArrowDown } from 'react-icons/io5';\nimport {MessagesContext} from './ChatBot/MessagesProvider';\n// import useMousePosition from '../Hooks/useMousePosition';\nimport PlaylistsThumbnail from './PlaylistsThumbnail';\nimport PlaylistsTrack from './PlaylistsTrack';\nimport PlaylistsCarousel from './PlaylistsCarousel';\nimport PlaylistsTitleScrollContainer from './PlaylistsTitleScrollContainer';\nimport PlaylistsCarouselContainer from './PlaylistsCarouselContainer'\nimport { FiPause, FiPlay, FiSkipBack, FiSkipForward } from 'react-icons/fi';\nlet playlists =  require('../fakeData/playlist.json');\n\n\n\nfunction PlaylistsContainer(): JSX.Element {\n  const [selectedTitle, setSelectedTitle] = useState<number>(0);\n  const [titleInQueue, setTitleInQueue] = useState<number>(0);\n  // const selectedPlaylist = {\n  //   selectedTitle: 0,\n  //   titleInQueue: 0\n  // }\n  let tracks = playlists[selectedTitle].tracks.items;\n\n  function updatePlaylistQueue(titleIndex: number) {\n    setTitleInQueue(titleIndex);\n  } \n  \n  function updatePlaylistSelectedTitle(titleIndex: number) {\n    if (selectedTitle === titleIndex) setSelectedTitle(titleInQueue);\n  }\n\n\n  return (\n\n\n\n    <div className='Playlists-Container'>\n\n\n      <PlaylistsCarouselContainer />\n\n        <div className='Playlists-Controls-Container'>\n\n          <div className='Playlists-Controls-Box'>\n            <div className=\"Playlists-Controls-Box-Left-Filler\"></div>\n\n            {/* <div className='Playlists-Prev-Container'>\n              <div className='Playlists-Prev-Box'>\n                <div className='Playlists-Prev-Overlay'></div>\n                <h1 className='Playlists-Prev'>Prev <FiSkipBack className='Playlists-Prev-Icon'/></h1>\n              </div>\n            </div>\n\n            <div className='Playlists-Play-Container'>\n              <div className='Playlists-Play-Box'>\n                <div className='Playlists-Play-Overlay'></div>\n                <h1 className='Playlists-Play'>Play <FiPlay className='Playlists-Play-Icon'/></h1>\n              </div>\n            </div>\n\n            <div className='Playlists-Next-Container'>\n              <div className='Playlists-Next-Box'>\n                <div className='Playlists-Next-Overlay'></div>\n                <h1 className='Playlists-Next'>Next <FiSkipForward className='Playlists-Next-Icon'/></h1>\n              </div>\n            </div> */}\n\n        \n          </div>\n          <div className='Playlists-Controls-Right-Filler'></div>\n        </div>\n\n     \n      {/* <div className='Test-Container'> */}\n      <div className='Playlists-All-Container'>\n        <div className='Playlists-All-Headers'>\n\n          <div className='Playlists-All-Title-Box'>\n            <span className='Playlists-All-Title'>Playlists</span>\n          </div>\n          <div className='Playlists-All-Sort-Container'>\n            <div className='Playlists-All-Sort-Box'>\n              <div className='Playlists-All-Sort-Overlay'></div>\n              <h1 className='Playlists-All-Sort'>Sort <IoArrowDown className='Playlists-Play-Icon'/></h1>\n            </div>\n          </div>\n\n        </div>\n  \n        <div className='Playlists-Circles-Container'>\n      {/* <div className='Playlists-All-Overlay'></div> */}\n            {playlists.map((playlist: any, index: any) => \n              <PlaylistsThumbnail key={index} playlist={playlist}/>\n              // <div key={playlist.id} className='Playlists-All-Box'>\n              //   <p className='Playlists-Name'>{playlist.name.toUpperCase()}</p>\n              // </div>\n            )}\n\n              {/* <div className='Playlists-Placeholder-Box'></div>\n              <div className='Playlists-Placeholder-Box'></div>\n              <div className='Playlists-Placeholder-Box'></div>\n              <div className='Playlists-Placeholder-Box'></div> */}\n          </div>\n        </div>\n {/* <div className='Test-Gradient'></div> */}\n\n {/* </div> */}\n\n\n    </div>\n  );\n};\n\nexport default PlaylistsContainer;","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Home.tsx",["188","189"],"import React, {useEffect, useContext} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {MessagesContext} from './ChatBot/MessagesProvider';\n   //eslint-disable-next-line react-hooks/exhaustive-deps\n   \nconst Home: React.FC = () => {\n  const {resetPhases} = useContext(MessagesContext);\n  const history = useHistory();\n\n  // useEffect(() => {\n  //   const resetRegisterPhases = () => {\n  //     resetPhases();\n  //     // Backend.getCSRF();\n  //   }\n  //   resetRegisterPhases();\n  //   //THE BELOW COMMENT IS TO DISREGARD TYPESCRIPT ERROR FOR NOT INCLUDING resetPhases AS DEPENDECNY, BECAUSE IF WE DID IT WOULD THROW AND INFINITE CALLBACK LOOP\n \n  // }, []);\n\n  function redirectToChatty() {\n    history.push('/register')\n  }\n\n  return (\n    <div className='Home-Container'>\n      <div className='Home-Upper-Box'>\n        <div className='Home-Header-Box'>\n          <h1>ACOUSTIGRAM.IO</h1>\n          <h5>A Digital Companion to keep you up to date with the latest music releases.</h5>\n\n        </div>\n        <div className='Home-Subheader-Box'>\n          {/* <h5>A Digital Companion to keep you up to date with the latest music releases.</h5> */}\n        </div>\n      </div>\n      <div className='Home-Lower-Box'>\n      <div className=\"Home-Button-Container\">\n        <div onClick={redirectToChatty} className=\"Home-Button-Box\">\n          <div className=\"Home-Button-Overlay\"></div>\n          <h1 className=\"Home-Button\">Get Started</h1>\n        </div>\n      </div>\n        {/* <button className='home-main-button'>GET STARTED</button> */}\n        {/* <button className='home-transition-element' onClick={redirectToChatty}>GET STARTED</button> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsTrack.tsx",["190","191","192","193","194"],"import React, {useState, useEffect} from 'react';\nimport { IoPlayCircleOutline, IoPauseCircleOutline, IoPlaySkipForward, IoPlaySkipBack } from 'react-icons/io5';\nimport {MessagesContext} from './ChatBot/MessagesProvider';\nimport useMousePosition from '../Hooks/useMousePosition';\nimport PlaylistsThumbnail from './PlaylistsThumbnail';\nlet playlists =  require('../fakeData/playlist.json');\n\ninterface Props {\n  track: any\n  index: number\n  selectedTrack: number\n  setSelectedTrack: (index: number) => void\n  selectedPlaylistIndex: number\n  playlistLength: number\n}\n\nfunction PlaylistsTrack({track, index, selectedTrack, setSelectedTrack, selectedPlaylistIndex, playlistLength}: Props): JSX.Element {\n  const [playingTrack, setPlayingTrack] = useState(true);\n\n  useEffect(() => {\n    function resetTrackVariables() {\n      setPlayingTrack(true);\n      setSelectedTrack(0);\n    }\n\n    resetTrackVariables();\n  }, [track, setPlayingTrack, selectedPlaylistIndex])\n\n  // useEffect(() => {\n  //   console.log('useEffect selectedTrack: ', selectedTrack);\n    \n  // }, [selectedTrack])\n\n  function togglePlayingTrack() {\n    setPlayingTrack(state => !state)\n  }\n\n  let styles: React.CSSProperties;\n\n  if (selectedTrack === index){\n    styles = { \n      top: `${(index * 60)}px`,\n      padding: '40px',\n      left: '-40px',\n      width: 'calc(100% - 120px)',\n      cursor: 'default',\n      backgroundImage: \"linear-gradient(to right, rgba(154, 255, 233, 0.842), #ffe0d7)\",\n    };\n  } else if (index > selectedTrack) {\n    styles = { top: `${(index * 60) + 80}px`};\n  } else {\n    styles = { top: `${(index * 60)}px`};\n  }\n\n\n  let playTrackControls: JSX.Element;\n\n  playTrackControls = (\n    <>\n    <div className=\"Playlists-ControlBtns-Container\">\n      <div className=\"Playlists-PlayBtn-Box\" onClick={() => setSelectedTrack(selectedTrack === 0 ? selectedTrack : selectedTrack - 1)}>\n        <IoPlaySkipBack className='Playlists-PrevBtn-Icon'/>\n      </div>\n      <div className=\"Playlists-PlayBtn-Box\" onClick={togglePlayingTrack}>\n        {playingTrack ? <IoPauseCircleOutline className='Playlists-PlayBtn-Icon'/> : <IoPlayCircleOutline className='Playlists-PlayBtn-Icon'/>}\n      </div>\n      <div className=\"Playlists-PlayBtn-Box\">\n        <IoPlaySkipForward className='Playlists-NextBtn-Icon' onClick={() => setSelectedTrack(selectedTrack === playlistLength - 1 ? selectedTrack : selectedTrack + 1)}/>\n      </div>\n    </div>\n    </>\n  )\n\n  return (\n    <>\n      <div key={track.track.id} className='Playlists-Track-Container' style={styles} >\n        <div className=\"Playlists-Track-Box\" onClick={() => setSelectedTrack(index)}>\n          <p className='Playlists-Track-Name'>{track.track.name}</p>\n          <p className='Playlists-Artist-Name'>{track.track.artists[0].name}</p>\n        </div>\n        {selectedTrack === index && playTrackControls}\n         {/* { <div className=\"Playlists-ControlBtns-Container\">\n            <div className=\"Playlists-PlayBtn-Box\" onClick={skipToPrevTrack}>\n              <IoPlaySkipBack className='Playlists-PrevBtn-Icon'/>\n            </div>\n            <div className=\"Playlists-PlayBtn-Box\" onClick={togglePlayingTrack}>\n              {playingTrack ? <IoPauseCircleOutline className='Playlists-PlayBtn-Icon'/> : <IoPlayCircleOutline className='Playlists-PlayBtn-Icon'/>}\n            </div>\n            <div className=\"Playlists-PlayBtn-Box\">\n              <IoPlaySkipForward className='Playlists-NextBtn-Icon' onClick={() => setSelectedTrack(selectedTrack + 1)}/>\n            </div>\n          </div>} */}\n      </div>\n    </>\n  );\n};\n\nexport default PlaylistsTrack;","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsCarousel.tsx",["195","196","197","198","199","200","201","202","203","204","205","206","207","208","209"],"import React, {useContext, useState, useRef, useEffect} from 'react';\nimport { IoArrowDown } from 'react-icons/io5';\nimport {MessagesContext} from './ChatBot/MessagesProvider';\n// import useMousePosition from '../Hooks/useMousePosition';\nimport PlaylistsThumbnail from './PlaylistsThumbnail';\nimport PlaylistsTrack from './PlaylistsTrack';\nimport PlaylistsTitleScrollContainer from './PlaylistsTitleScrollContainer';\nimport { FiPause, FiPlay, FiSkipBack, FiSkipForward } from 'react-icons/fi';\nimport useElementOnScreen from '../Hooks/useElementOnScreen';\nimport PLACEHOLDER_IMG_0 from '../images/placeholder_1.jpg';\nimport PLACEHOLDER_IMG_1 from '../images/placeholder_2.jpg';\nimport PLACEHOLDER_IMG_2 from '../images/placeholder_3.jpg';\nimport PLACEHOLDER_IMG_3 from '../images/placeholder_4.jpg';\nimport PLACEHOLDER_IMG_4 from '../images/placeholder_5.jpg';\nimport PLACEHOLDER_IMG_5 from '../images/placeholder_6.jpg';\n\n\ninterface Props {\n  playlist: {\n    \"id\": string\n    \"name\": string\n    \"images\": [\n      {\n          \"url\": \"https://i.scdn.co/image/47421900e7534789603de84c03a40a826c058e45\"\n      }\n    ]\n    \"tracks\": {\n        \"items\": [\n        {\n          \"track\": {\n              \"album\": {\n                  \"images\": [\n                      {\n                          \"height\": 640,\n                          \"url\": \"https://i.scdn.co/image/47421900e7534789603de84c03a40a826c058e45\",\n                          \"width\": 640\n                      }\n                  ],\n                  \"name\": \"Illmatic\",\n                  \"type\": \"album\"\n              },\n              \"artists\": [\n                  {\n                      \"name\": \"Nas\",\n                      \"type\": \"artist\"\n                  }\n              ],\n              \"name\": \"The World is Yours\",\n              \"id\": \"track_4\"\n          }\n      }\n        ]\n    }\n  }\n  index: number\n  updateSelectedPlaylistIndex: (selectedPlaylist: number) => void\n  selectedPlaylistIndex: number\n}\n\nfunction PlaylistsCarousel({playlist, index, updateSelectedPlaylistIndex, selectedPlaylistIndex}: Props): JSX.Element {\n  const [selectedTrack, setSelectedTrack] = useState<number>(0);\n  const [selectedTitle, setSelectedTitle] = useState<number>(0);\n  const [titleInQueue, setTitleInQueue] = useState<number>(0);\n  const playlistImgPlaceholders = [PLACEHOLDER_IMG_0, PLACEHOLDER_IMG_1, PLACEHOLDER_IMG_2, PLACEHOLDER_IMG_3, PLACEHOLDER_IMG_4, PLACEHOLDER_IMG_5];\n  const playlistRef = useRef<any | null>(null);\n  const entry = useElementOnScreen(playlistRef, {\n    // root: document.querySelector('.scrolling-wrapper'),\n    // rootMargin: \"0px -300px\",\n    threshold: 0.8\n  });\n  const isVisible = !!entry?.isIntersecting;\n\n  \n  \n  // const selectedPlaylist = {\n  //   selectedTitle: 0,\n  //   titleInQueue: 0\n  // }\n  let tracks = playlist.tracks.items;\n\n  useEffect(() => {\n    updateSelectedPlaylistIndex(index)\n  }, [isVisible]);\n\n  function updateSelectedTrack(trackIndex: number) {\n    console.log(\"trackIndex \", trackIndex);\n    \n    setSelectedTrack(trackIndex);\n  }\n\n  // function updatePlaylistQueue(titleIndex: number) {\n  //   setTitleInQueue(titleIndex);\n  // } \n  \n  // function updatePlaylistSelectedTitle(titleIndex: number) {\n  //   if (selectedTitle === titleIndex) setSelectedTitle(titleInQueue);\n  // }\n\n\n  return (\n\n\n\n\n      <div className='Playlists-Selected-Carousel-Content' ref={playlistRef}>\n\n\n\n        <div className='Playlists-Artwork-Box'>\n          {/* <img className='Playlists-Artwork' src={playlist.images[0].url} alt=''/> */}\n          <img className='Playlists-Artwork' src={playlistImgPlaceholders[index]} alt=''/>\n        </div>\n\n        <div className='Playlists-Tracks-Container'>\n            {tracks.map((track: any, index: number) => \n              <PlaylistsTrack track={track} key={index} index={index} playlistLength={tracks.length} selectedTrack={selectedTrack} setSelectedTrack={setSelectedTrack} selectedPlaylistIndex={selectedPlaylistIndex}/>\n            )}\n        </div>\n\n\n\n    </div>\n  );\n};\n\nexport default PlaylistsCarousel;","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsCarouselContainer.tsx",["210","211","212","213","214","215","216","217","218","219","220","221","222","223"],"import React, {useContext, useState, useRef, useEffect} from 'react';\nimport { IoArrowDown } from 'react-icons/io5';\nimport {MessagesContext} from './ChatBot/MessagesProvider';\n// import useMousePosition from '../Hooks/useMousePosition';\nimport PlaylistsThumbnail from './PlaylistsThumbnail';\nimport PlaylistsTrack from './PlaylistsTrack';\nimport PlaylistsTitleScrollContainer from './PlaylistsTitleScrollContainer';\nimport PlaylistsCarousel from './PlaylistsCarousel';\nimport { FiPause, FiPlay, FiSkipBack, FiSkipForward } from 'react-icons/fi';\nimport useElementOnScreen from '../Hooks/useElementOnScreen';\nlet playlists =  require('../fakeData/playlist.json');\n\n\nfunction PlaylistsCarouselContainer(): JSX.Element {\n  const [selectedPlaylistIndex, setSelectedPlaylistIndex] = useState<number>(0);\n  const [selectedPlaylistTitle, setSelectedPlaylistTitle] = useState<string>('');\n  // const [titleInQueue, setTitleInQueue] = useState<number>(0);\n  // const playlistRef = useRef<any | null>(null);\n  // const entry = useElementOnScreen(playlistRef, {\n  //   // root: document.querySelector('.scrolling-wrapper'),\n  //   // rootMargin: \"0px -300px\",\n  //   threshold: 0.9\n  // });\n  // const isVisible = !!entry?.isIntersecting;\n  // console.log(`index ${index} - ${isVisible}`);\n  \n  // const selectedPlaylist = {\n  //   selectedTitle: 0,\n  //   titleInQueue: 0\n  // }\n  // let tracks = playlist.tracks.items;\n\n  // function updatePlaylistQueue(titleIndex: number) {\n  //   setTitleInQueue(titleIndex);\n  // } \n  \n  // function updatePlaylistSelectedTitle(titleIndex: number) {\n  //   if (selectedTitle === titleIndex) setSelectedTitle(titleInQueue);\n  // }\n\n  function updateSelectedPlaylistIndex(titleIndex: number) {\n    setSelectedPlaylistIndex(titleIndex);\n    // setSelectedPlaylistTitle()\n  }\n\n\n  return (\n    <>\n    <div className='Playlists-Selected-Header-Box'>\n    <PlaylistsTitleScrollContainer selectedPlaylistIndex={selectedPlaylistIndex}/>\n  </div>\n  \n<div className='Playlists-Carousel-Content'>\n{playlists.map((playlist: any, index: any) => \n        <PlaylistsCarousel key={index} playlist={playlist} index={index} updateSelectedPlaylistIndex={updateSelectedPlaylistIndex} selectedPlaylistIndex={selectedPlaylistIndex}/>\n      )}\n</div>\n</>\n  );\n};\n\nexport default PlaylistsCarouselContainer;","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/App.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/MessagesProvider.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Routes.tsx",["224","225"],"import React from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport Home from './Home';\nimport Chatty from './ChatBot/Chatty';\nimport Login from './Login';\nimport Profile from './Profile';\nimport PlaylistsContainer from './PlaylistsContainer'\nimport Authorized from './Authorized';\n\nconst Routes: React.FC = () => {\n\n  return (\n    <div className='main'>\n      <Switch>\n        <Route exact path='/'><Home/></Route>\n        <Route exact path='/register'><Chatty/></Route>\n        {/* <Route exact path='/login'><Login /></Route> */}\n        <Route exact path='/playlists'><PlaylistsContainer /></Route>\n        <Route exact path='/authorized'><Authorized /></Route>\n        <Redirect to='/'/>\n      </Switch>\n    </div>\n  );\n};\n\nexport default Routes;",["226","227"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Navbar.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Chatty.tsx",["228"],"import React, {useEffect, useContext, useState} from 'react';\nimport ChattyDisplay from './ChattyDisplay';\nimport {MessagesContext} from './MessagesProvider';\nimport useSpotifyAuth from './helpers/useSpotifyAuth';\nimport UseAnimations from 'react-useanimations';\nimport loading from 'react-useanimations/lib/loading';\n\nfunction Chatty(): JSX.Element {\n  const {displayedContent} = useContext(MessagesContext);\n  const {isConfirmedCrossSiteAttack, handleSpotifyAuthenticationError, retrieveSpotifyAccessTokens} = useSpotifyAuth();\n  const [firstLoad, setFirstLoad] = useState(false);\n  const [authLogic, setAuthLogic] = useState(false);\n  const search = window.location.search;\n  const params = new URLSearchParams(search);\n  const stateKey: string | null = params.get('state');\n  const authorizationError: string | null = params.get('error');\n\n////////////////////////////////////////////////////  RUN DISPLAYPREVIOUSMESSAGEHISTORY ON COMPONENT MOUNT CONDITIONALY  ////////////////////////////////////////////////////\n\n  useEffect(() => {\n    //HANDLE AUTHENTICATION AND DISPLAY APPROPRIATE PREVIOUS CHATTY MESSAGES\n    function displayPreviousMessageHistory() {\n      if (isConfirmedCrossSiteAttack()) return;\n  \n      if (authorizationError) {\n        handleSpotifyAuthenticationError()\n      } else {\n        retrieveSpotifyAccessTokens();\n      }\n    }\n    //IF STATEKEY IS TRUTHY THAN THE USER HAS ATTEMPTED TO AUTHENTICATE WITH SPOTIFY \n    //AND WE NEED TO DISPLAY WHERE HE/SHE LEFT OFF IN THE CHATTY CONVERSATION\n    if (stateKey) {\n      setAuthLogic(true);\n      displayPreviousMessageHistory()\n    //IF STATEKEY IS NULL THEN THE USER HASN'T ATTEMPTED TO AUTHENTICATE WITH SPOTIFY\n    //INITIATE CHATTY CONVERSATION AT THE BEGINNING\n    } else {\n      setFirstLoad(true);\n    }\n  }, [stateKey])\n\n////////////////////////////////////////////////////  RENDER LOADING SPINNER OR CHATTY DISPLAY  ////////////////////////////////////////////////////\n\n  return (\n    <>\n      {(authLogic && !displayedContent.length) && <UseAnimations className='Chatty-Loading-Spinner' animation={loading} size={200} style={{ padding: 100 }} strokeColor='#37f8ff' />}\n      {(firstLoad || displayedContent.length) && <ChattyDisplay/>}\n    </>\n  );\n};\n\nexport default Chatty;","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/ChattyDisplay.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useSpotifyAuth.tsx",["229"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useChattyScript.tsx",[],["230","231"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesContainer.tsx",["232"],"import React, {useState, useRef, useEffect, useContext, useMemo} from 'react';\nimport useInterval from '../../../Hooks/useInterval';\nimport {MessagesContext} from '../MessagesProvider';\nimport MessagesWrapper from './MessagesWrapper';\nimport MesssagesTypingCursor from './MessagesTypingCursor';\nimport MessagesCurrent from './MessagesCurrent';\nimport MessagesPast from './MessagesPast';\n\n//DEFINING THE CONTRACT FOR THE VARIABLE TYPES THAT WILL BE PASSED IN VIA PROPS\ninterface Props {\n  messages: Array<string>\n  finishedFunction?: (val: boolean) => void\n  addToDisplayedContent?: boolean\n  incrementMessageValue?: number\n};\n\n//OUR COMPONENT THAT ACCEPTS THE APPROPRIATE MESSAGES NEEDED FOR OUR CHATTY RESPONSE AND\n//APPENDS THEM TO THE DOM ONE LETTER AT A TIME\nfunction MessagesContainer({messages, finishedFunction, addToDisplayedContent = true, incrementMessageValue = 1}: Props): JSX.Element {\n  const [displayedMessages, setDisplayedMessages] = useState<Array<string>>([]);\n  const [createMessage, setCreateMessage] = useState<string>('');\n  const [count, setCount] = useState<number>(0);\n  let messageCharLength = useRef(0)\n  let charLength = useRef(0);\n  let delayValue = useRef(100);\n  const [isRunning, setIsRunning] = useState<boolean>(true);\n  const [finishedMessages, setFinishedMessages] = useState<boolean>(false);\n  const [onLastMessage, setOnLastMessage] = useState<boolean>(false);\n  const {incrementMessagingPhase, addContentToBeDisplayed} = useContext(MessagesContext);\n  const useIntervalId = useRef<any | null>();\n  const scrollToBottomRef = useRef<any | null>();\n  const timeoutId = useRef<any | null>();\n  const typingCursor: string = ' \\u{258C}';\n\n  //SCROLL DOWN TO END OF MESSAGE TYPING TO KEEP MESSAGES IN VIEWPORT WHILE CHATTY IS TYPING\n  useEffect(() => {\n    function scrollingToBottom() {\n      scrollToBottomRef.current.scrollIntoView({behavior: 'smooth'});\n    };\n    if (count < messages.length && !finishedMessages) scrollingToBottom();\n  }, [count, finishedMessages, messages]);\n\n  //FUNCTION TO PASS TO OUR USEINTERVAL HOOK TO APPEND A LETTER AT A TIME TO CREATEMESSAGE\n  //IN ORDER TO CREATE THE LOOK AS IF OUR CHAT BOT WAS TYPING\n  function appendMessages() {\n    messageCharLength.current = messages[count].length;\n    const msgWithNewLetterAdded: string = messages[count].substring(charLength.current, charLength.current + 1);\n    const msgWithRemovedCursor = createMessage.slice(0, -2);\n    setCreateMessage(msgWithRemovedCursor + msgWithNewLetterAdded + typingCursor);\n    charLength.current = charLength.current + 1;\n    //CHANGING THE DELAY VALUE AFTER EACH LETTER APPENDED TO SCREEN IN ORDER TO TRY\n    //AND CREATE A MORE HUMAN VARIABLE TYPING SPEED\n    delayValue.current = Math.floor(Math.random() * 60) + 1;\n  };\n\n  // CALLING THE USEINTERVAL HOOK TO BE ABLE TO DYNAMICALLY ALTER THE DELAY FOR OUR INTERVAL\n  useInterval(appendMessages, isRunning ? delayValue.current : null, useIntervalId);\n\n  //SET TIMEOUT TO UPDATE ISRUNNING VARAIBLE TO TRUE AFTER A BRIEF PAUSE TO SPACE OUT CHATTY'S MESSAGES\n  useEffect(() => {\n\n    if (isRunning) return;\n    //IF ALL MESSAGES HAVE BEEN APPENDED TO OUR DOM DON'T NEED TO UPDATE COUNT OR CHANGE ISRUNNING\n    if (count >= messages.length && count !== 0) return;\n\n    timeoutId.current = setTimeout(() => {\n      setIsRunning(true);\n      //MOVED SETCOUNT TO BE INSIDE THIS TIMEOUT AS A WAY TO PREVENT AN INFINITE LOOP\n      //SINCE THIS EXECUTES RIGHT BEFORE COUNT IS SET BACK TO ZERO WHICH NEVER TRIGGERS\n      //THE CLEAR INTERVAL USE EFFECT\n      setCount(num => num + 1);\n    }, 500);\n\n    return () => clearTimeout(timeoutId.current);\n  },[isRunning, count, messages]);\n\n  //USEEFFECT THAT WILL RESET CREATEMESSAGE TO AN EMPTY STRING ONCE THE MESSAGE IS FINISHED\n  //AND THEN APPEND THAT MESSAGE TO DISPLAYEDMESSAGES TO APPEND TO THE DOM \n  useEffect(() => {\n\n    if (charLength.current >= messageCharLength.current && messageCharLength.current !== 0) {\n      const msgWithRemovedCursor = createMessage.slice(0, -2);\n      setDisplayedMessages(state => [...state, msgWithRemovedCursor]);\n      setCreateMessage('');\n      charLength.current = 0;\n      setIsRunning(false);\n    };\n  }, [setCount, charLength, messageCharLength, setDisplayedMessages, setCreateMessage, createMessage]);\n\n  //USEEFFECT THAT WILL CLEAR THE USEINTERVAL TIMER WHEN ALL MESSAGES PASSED IN TO OUR \n  //MESSAGE WRAPPER COMPONENT HAVE FINISHED APPENDING TO THE DOM\n  useEffect(() => {\n\n    if (count >= messages.length && count !== 0) {\n      clearInterval(useIntervalId.current);\n      setCount(0);\n      charLength.current = 0;\n      setFinishedMessages(true);\n      if (finishedFunction) finishedFunction(true);\n      if (addToDisplayedContent) {\n        addContentToBeDisplayed([<MessagesPast messages={messages}/>])\n        incrementMessagingPhase(incrementMessageValue);\n      }\n    };\n  }, [count, messages, finishedFunction, incrementMessagingPhase]);\n\n  //UPDATING ONLASTMESSAGE TO BE TRUE TO PREVENT TYPING CURSOR TO APPEAR AFTER THE LAST MESSAGE\n  useEffect(() => {\n\n    const preventTypingCursor = () => {\n      setOnLastMessage(true);\n    };\n\n    if (count === messages.length - 1) preventTypingCursor();\n  }, [count, setOnLastMessage, messages]);\n\n  const memoizedDisplayedMessages = useMemo(() => <MessagesPast messages={displayedMessages}/>, [displayedMessages])\n\n\n  // RETURNING JSX\n  return (\n    <MessagesWrapper>\n      {displayedMessages && memoizedDisplayedMessages}\n      <MessagesCurrent createMessage={createMessage}/>\n      <MesssagesTypingCursor onLastMessage={onLastMessage} scrollToBottomRef={scrollToBottomRef} isRunning={isRunning} typingCursor={typingCursor}/>\n    </MessagesWrapper>\n  );\n};\n\nexport default MessagesContainer;","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Buttons/ButtonsPast.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useInterval.js",["233","234"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useMessages.ts",["235"],"import React, {useContext} from 'react';\nimport {MessagesContext} from '../MessagesProvider';\n\ninterface IMessageObj {\n  id: string\n  messages: string[]\n}\n\n// type Hook = () => {\n//   initialMessages: IMessageObj,\n//   whatIfNoSpotify: IMessageObj,\n//   proceedWithoutSpotify: IMessageObj,\n//   registerUserPartOne: IMessageObj,\n//   registerUserPartTwo: IMessageObj,\n//   registerUserPartThree: IMessageObj,\n//   registerUserPartFour: IMessageObj,\n//   registerUserPartFive: IMessageObj,\n//   registerUserPartSix: IMessageObj,\n//   spotifyAccountValid: IMessageObj,\n//   secondFailedAttempt: IMessageObj,\n//   spotifyAccountError: IMessageObj\n// };\n\nfunction useMessages() {\n  const {user} = useContext(MessagesContext);\n  let userFirstName = user['first_name'] !== '' ? user['first_name'] : 'there';\n  const userUsername = user['username'] !== '' ? user['username'] : '';\n\n////////////////////////////////////////////////////  PRE BAKED MESSAGES FOR CHATTY  ////////////////////////////////////////////////////\n\n  const initialMessages: IMessageObj = {\n    id: 'm1',\n    messages: [\n      `Hi, I'm Acoustigram.io, your digital companion. I'm here to share new music with you.`, \n      `If you're already a registered user you can login by clicking the link above.`,\n      `If you're new I'll walk you through setting up your Spotify Account.`,\n      `This will allow me to scan it for trends in your listening history to better assist me in suggesting the most relevant music for you.`\n    ]\n  };\n\n  // CREATING SHORTER MESSAGES FOR QUICKER TESTING\n  // const initialMessages: IMessageObj = {\n  //   id: 'm1',\n  //   messages: ['hi']\n  // };\n\n  const whatIfNoSpotify: IMessageObj = {\n    id: 'm2',\n    messages: [\n      'Being able to access your Spotify will help me create playlists that have a higher chance of being ones that you will enjoy.',\n      `Also, you'll be able to save playlists directly to your Spotify account without leaving our site.`,\n      `But don't worry if you don't have a Spotify account.`,\n      'I can still set up a profile for you and share playlists.',\n      `And I promise I won't share your information with anyone or alter your Spotify data other than saving playlists to your account.`\n    ]\n  };\n\n    //CREATING SHORTER MESSAGES FOR QUICKER TESTING\n    // const whatIfNoSpotify: IMessageObj = {\n    //   id: 'm1',\n    //   messages: ['hi']\n    // };\n\n  const spotifyAccountError: IMessageObj = {\n    id: 'm3',\n    messages: [\n      'Oh no there was an error setting up your Spotify account!',\n      'Are you sure you entered the right info?',\n      'Or maybe you clicked cancel.',\n      'Do you want to try again or proceed without connecting your Spotify?'\n    ]\n  };\n\n  const proceedWithoutSpotify: IMessageObj = {\n    id: 'm4',\n    messages: [\n      `Sounds good, we won't connect a Spotify account.`,\n      'We can always add it later in your profile settings.'\n    ]\n  };\n\n  const secondFailedAttempt: IMessageObj = {\n    id: 'm5',\n    messages: [\n      `Dangit, it didn't work this time either.`,\n      `I'm just going to proceed without using Spotify.`,\n      'We can always add it later in your profile settings.'\n    ]\n  };\n\n  const spotifyAccountValid: IMessageObj = {\n    id: 'm6',\n    messages: [`Perfect, your Spotify account is all set up!`]\n  };\n\n  const registerUserPartOne: IMessageObj = {\n    id: 'm7',\n    messages: [\n      `Ok, now we'll set up a profile for you.`, \n      'This will give us a place to continually add you new music as it comes out.',\n      `Let's start with your first name. You can use the input field below to enter it.`\n    ]\n  };\n\n  //CREATING SHORTER MESSAGES FOR QUICKER TESTING\n  // const registerUserPartOne: IMessageObj = {\n  //   id: 'm1',\n  //   messages: ['hi']\n  // };\n\n  const registerUserPartTwo: IMessageObj = {\n    id: 'm8',\n    messages: [\n      `Hi ${userFirstName}!`,\n      `And what's your last name?`\n    ]\n  };\n\n  const registerUserPartThree: IMessageObj = {\n    id: 'm9',\n    messages: [\n      `Excellent. And what's your email address in case you get locked out.`,\n      `We promise we won't spam you with emails.`\n    ]\n  };\n\n  const registerUserPartFour: IMessageObj = {\n    id: 'm10',\n    messages: ['What would you like your username to be?']\n  };\n\n  const registerUserPartFive: IMessageObj = {\n    id: 'm11',\n    messages: [\n      `Ok ${userUsername} it is!`,\n      'And lastly, what would you like your password to be?'\n    ]\n  };\n\n  const registerUserPartSix: IMessageObj = {\n    id: 'm12',\n    messages: [\n      `Perfect, you're all set up!`,\n      `I'm taking you to your playlists now.`,\n      `Just keep in mind, this site is still in development so currently these playlists are just placeholders.`,\n      `You can not listen to the tracks quite yet. More to come soon!`\n    ]\n  };\n\n  return {\n    initialMessages,\n    whatIfNoSpotify,\n    proceedWithoutSpotify,\n    registerUserPartOne,\n    registerUserPartTwo,\n    registerUserPartThree,\n    registerUserPartFour,\n    registerUserPartFive,\n    registerUserPartSix,\n    spotifyAccountError,\n    spotifyAccountValid,\n    secondFailedAttempt\n  };\n};\n\nexport default useMessages;","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useButtons.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/index.js",[],["236","237"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useMousePosition.js",[],["238","239"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Buttons/ButtonsContainer.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesTypingCursor.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Buttons/ButtonsCurrent.tsx",["240","241"],"import React, {useEffect, useRef} from 'react';\n\ninterface Props {\n  buttons: Array<JSX.Element>\n  scrollToBottomRef: any | null\n};\n\nfunction ButtonsCurrent({buttons, scrollToBottomRef}: Props): JSX.Element {\n\n  return (\n    <div ref={scrollToBottomRef}>\n      {buttons && buttons.map((item, index) => <div key={index} className='Chatty-Button-Main'>{item}</div>)}\n    </div>\n  );\n};\n\nexport default ButtonsCurrent;","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsThumbnail.tsx",["242"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesCurrent.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Register.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/reportWebVitals.js",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/usePriorContent.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesWrapper.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Backend.ts",[],{"ruleId":"243","severity":1,"message":"244","line":1,"column":34,"nodeType":"245","messageId":"246","endLine":1,"endColumn":43},{"ruleId":"243","severity":1,"message":"247","line":10,"column":10,"nodeType":"245","messageId":"246","endLine":10,"endColumn":19},{"ruleId":"243","severity":1,"message":"248","line":10,"column":21,"nodeType":"245","messageId":"246","endLine":10,"endColumn":33},{"ruleId":"243","severity":1,"message":"249","line":11,"column":34,"nodeType":"245","messageId":"246","endLine":11,"endColumn":59},{"ruleId":"243","severity":1,"message":"250","line":12,"column":10,"nodeType":"245","messageId":"246","endLine":12,"endColumn":29},{"ruleId":"243","severity":1,"message":"251","line":12,"column":31,"nodeType":"245","messageId":"246","endLine":12,"endColumn":53},{"ruleId":"243","severity":1,"message":"252","line":13,"column":10,"nodeType":"245","messageId":"246","endLine":13,"endColumn":23},{"ruleId":"243","severity":1,"message":"253","line":14,"column":9,"nodeType":"245","messageId":"246","endLine":14,"endColumn":17},{"ruleId":"243","severity":1,"message":"254","line":17,"column":12,"nodeType":"245","messageId":"246","endLine":17,"endColumn":31},{"ruleId":"255","severity":1,"message":"256","line":84,"column":30,"nodeType":"257","endLine":84,"endColumn":35},{"ruleId":"255","severity":1,"message":"256","line":86,"column":30,"nodeType":"257","endLine":86,"endColumn":35},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"243","severity":1,"message":"262","line":1,"column":16,"nodeType":"245","messageId":"246","endLine":1,"endColumn":24},{"ruleId":"243","severity":1,"message":"263","line":1,"column":45,"nodeType":"245","messageId":"246","endLine":1,"endColumn":52},{"ruleId":"243","severity":1,"message":"264","line":1,"column":54,"nodeType":"245","messageId":"246","endLine":1,"endColumn":65},{"ruleId":"243","severity":1,"message":"265","line":4,"column":5,"nodeType":"245","messageId":"246","endLine":4,"endColumn":14},{"ruleId":"243","severity":1,"message":"266","line":30,"column":5,"nodeType":"245","messageId":"246","endLine":30,"endColumn":23},{"ruleId":"243","severity":1,"message":"267","line":31,"column":5,"nodeType":"245","messageId":"246","endLine":31,"endColumn":24},{"ruleId":"243","severity":1,"message":"268","line":34,"column":9,"nodeType":"245","messageId":"246","endLine":34,"endColumn":25},{"ruleId":"243","severity":1,"message":"269","line":49,"column":13,"nodeType":"245","messageId":"246","endLine":49,"endColumn":20},{"ruleId":"270","severity":1,"message":"271","line":52,"column":8,"nodeType":"272","endLine":52,"endColumn":41,"suggestions":"273"},{"ruleId":"258","replacedBy":"274"},{"ruleId":"260","replacedBy":"275"},{"ruleId":"243","severity":1,"message":"276","line":1,"column":16,"nodeType":"245","messageId":"246","endLine":1,"endColumn":26},{"ruleId":"243","severity":1,"message":"277","line":3,"column":9,"nodeType":"245","messageId":"246","endLine":3,"endColumn":24},{"ruleId":"243","severity":1,"message":"278","line":6,"column":8,"nodeType":"245","messageId":"246","endLine":6,"endColumn":22},{"ruleId":"243","severity":1,"message":"279","line":7,"column":8,"nodeType":"245","messageId":"246","endLine":7,"endColumn":25},{"ruleId":"243","severity":1,"message":"280","line":8,"column":8,"nodeType":"245","messageId":"246","endLine":8,"endColumn":37},{"ruleId":"243","severity":1,"message":"281","line":10,"column":10,"nodeType":"245","messageId":"246","endLine":10,"endColumn":17},{"ruleId":"243","severity":1,"message":"282","line":10,"column":19,"nodeType":"245","messageId":"246","endLine":10,"endColumn":25},{"ruleId":"243","severity":1,"message":"283","line":10,"column":27,"nodeType":"245","messageId":"246","endLine":10,"endColumn":37},{"ruleId":"243","severity":1,"message":"284","line":10,"column":39,"nodeType":"245","messageId":"246","endLine":10,"endColumn":52},{"ruleId":"243","severity":1,"message":"285","line":22,"column":7,"nodeType":"245","messageId":"246","endLine":22,"endColumn":13},{"ruleId":"243","severity":1,"message":"286","line":24,"column":12,"nodeType":"245","messageId":"246","endLine":24,"endColumn":31},{"ruleId":"243","severity":1,"message":"287","line":28,"column":12,"nodeType":"245","messageId":"246","endLine":28,"endColumn":39},{"ruleId":"243","severity":1,"message":"244","line":1,"column":16,"nodeType":"245","messageId":"246","endLine":1,"endColumn":25},{"ruleId":"243","severity":1,"message":"288","line":7,"column":10,"nodeType":"245","messageId":"246","endLine":7,"endColumn":21},{"ruleId":"243","severity":1,"message":"277","line":3,"column":9,"nodeType":"245","messageId":"246","endLine":3,"endColumn":24},{"ruleId":"243","severity":1,"message":"289","line":4,"column":8,"nodeType":"245","messageId":"246","endLine":4,"endColumn":24},{"ruleId":"243","severity":1,"message":"290","line":5,"column":8,"nodeType":"245","messageId":"246","endLine":5,"endColumn":26},{"ruleId":"243","severity":1,"message":"265","line":6,"column":5,"nodeType":"245","messageId":"246","endLine":6,"endColumn":14},{"ruleId":"270","severity":1,"message":"291","line":27,"column":6,"nodeType":"272","endLine":27,"endColumn":53,"suggestions":"292"},{"ruleId":"243","severity":1,"message":"276","line":1,"column":16,"nodeType":"245","messageId":"246","endLine":1,"endColumn":26},{"ruleId":"243","severity":1,"message":"293","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":21},{"ruleId":"243","severity":1,"message":"277","line":3,"column":9,"nodeType":"245","messageId":"246","endLine":3,"endColumn":24},{"ruleId":"243","severity":1,"message":"290","line":5,"column":8,"nodeType":"245","messageId":"246","endLine":5,"endColumn":26},{"ruleId":"243","severity":1,"message":"280","line":7,"column":8,"nodeType":"245","messageId":"246","endLine":7,"endColumn":37},{"ruleId":"243","severity":1,"message":"281","line":8,"column":10,"nodeType":"245","messageId":"246","endLine":8,"endColumn":17},{"ruleId":"243","severity":1,"message":"282","line":8,"column":19,"nodeType":"245","messageId":"246","endLine":8,"endColumn":25},{"ruleId":"243","severity":1,"message":"283","line":8,"column":27,"nodeType":"245","messageId":"246","endLine":8,"endColumn":37},{"ruleId":"243","severity":1,"message":"284","line":8,"column":39,"nodeType":"245","messageId":"246","endLine":8,"endColumn":52},{"ruleId":"243","severity":1,"message":"294","line":62,"column":10,"nodeType":"245","messageId":"246","endLine":62,"endColumn":23},{"ruleId":"243","severity":1,"message":"295","line":62,"column":25,"nodeType":"245","messageId":"246","endLine":62,"endColumn":41},{"ruleId":"243","severity":1,"message":"296","line":63,"column":10,"nodeType":"245","messageId":"246","endLine":63,"endColumn":22},{"ruleId":"243","severity":1,"message":"297","line":63,"column":24,"nodeType":"245","messageId":"246","endLine":63,"endColumn":39},{"ruleId":"270","severity":1,"message":"298","line":83,"column":6,"nodeType":"272","endLine":83,"endColumn":17,"suggestions":"299"},{"ruleId":"243","severity":1,"message":"300","line":85,"column":12,"nodeType":"245","messageId":"246","endLine":85,"endColumn":31},{"ruleId":"243","severity":1,"message":"276","line":1,"column":16,"nodeType":"245","messageId":"246","endLine":1,"endColumn":26},{"ruleId":"243","severity":1,"message":"301","line":1,"column":38,"nodeType":"245","messageId":"246","endLine":1,"endColumn":44},{"ruleId":"243","severity":1,"message":"244","line":1,"column":46,"nodeType":"245","messageId":"246","endLine":1,"endColumn":55},{"ruleId":"243","severity":1,"message":"293","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":21},{"ruleId":"243","severity":1,"message":"277","line":3,"column":9,"nodeType":"245","messageId":"246","endLine":3,"endColumn":24},{"ruleId":"243","severity":1,"message":"290","line":5,"column":8,"nodeType":"245","messageId":"246","endLine":5,"endColumn":26},{"ruleId":"243","severity":1,"message":"278","line":6,"column":8,"nodeType":"245","messageId":"246","endLine":6,"endColumn":22},{"ruleId":"243","severity":1,"message":"281","line":9,"column":10,"nodeType":"245","messageId":"246","endLine":9,"endColumn":17},{"ruleId":"243","severity":1,"message":"282","line":9,"column":19,"nodeType":"245","messageId":"246","endLine":9,"endColumn":25},{"ruleId":"243","severity":1,"message":"283","line":9,"column":27,"nodeType":"245","messageId":"246","endLine":9,"endColumn":37},{"ruleId":"243","severity":1,"message":"284","line":9,"column":39,"nodeType":"245","messageId":"246","endLine":9,"endColumn":52},{"ruleId":"243","severity":1,"message":"302","line":10,"column":8,"nodeType":"245","messageId":"246","endLine":10,"endColumn":26},{"ruleId":"243","severity":1,"message":"303","line":16,"column":10,"nodeType":"245","messageId":"246","endLine":16,"endColumn":31},{"ruleId":"243","severity":1,"message":"304","line":16,"column":33,"nodeType":"245","messageId":"246","endLine":16,"endColumn":57},{"ruleId":"243","severity":1,"message":"305","line":5,"column":8,"nodeType":"245","messageId":"246","endLine":5,"endColumn":13},{"ruleId":"243","severity":1,"message":"306","line":6,"column":8,"nodeType":"245","messageId":"246","endLine":6,"endColumn":15},{"ruleId":"258","replacedBy":"307"},{"ruleId":"260","replacedBy":"308"},{"ruleId":"270","severity":1,"message":"309","line":41,"column":6,"nodeType":"272","endLine":41,"endColumn":16,"suggestions":"310"},{"ruleId":"243","severity":1,"message":"311","line":1,"column":8,"nodeType":"245","messageId":"246","endLine":1,"endColumn":13},{"ruleId":"258","replacedBy":"312"},{"ruleId":"260","replacedBy":"313"},{"ruleId":"270","severity":1,"message":"314","line":105,"column":6,"nodeType":"272","endLine":105,"endColumn":66,"suggestions":"315"},{"ruleId":"316","severity":1,"message":"311","line":1,"column":8,"nodeType":"245","messageId":"246","endLine":1,"endColumn":13},{"ruleId":"270","severity":1,"message":"317","line":20,"column":6,"nodeType":"272","endLine":20,"endColumn":13,"suggestions":"318"},{"ruleId":"243","severity":1,"message":"311","line":1,"column":8,"nodeType":"245","messageId":"246","endLine":1,"endColumn":13},{"ruleId":"258","replacedBy":"307"},{"ruleId":"260","replacedBy":"308"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"243","severity":1,"message":"244","line":1,"column":16,"nodeType":"245","messageId":"246","endLine":1,"endColumn":25},{"ruleId":"243","severity":1,"message":"301","line":1,"column":27,"nodeType":"245","messageId":"246","endLine":1,"endColumn":33},{"ruleId":"243","severity":1,"message":"244","line":1,"column":26,"nodeType":"245","messageId":"246","endLine":1,"endColumn":35},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'isVisible' is assigned a value but never used.","'setIsVisible' is assigned a value but never used.","'setParentFinishedMounting' is assigned a value but never used.","'selectedPlaylistRef' is assigned a value but never used.","'setSelectedPlaylistRef' is assigned a value but never used.","'viewportWidth' is assigned a value but never used.","'titleRef' is assigned a value but never used.","'observeTitlesInView' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-native-reassign",["319"],"no-negated-in-lhs",["320"],"'useState' is defined but never used.","'useMemo' is defined but never used.","'useCallback' is defined but never used.","'playlists' is assigned a value but never used.","'leftSideOfTitleDiv' is assigned a value but never used.","'rightSideOfTitleDiv' is assigned a value but never used.","'viewportMidPoint' is assigned a value but never used.","'leftVal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleScrollToSelectedTitle' and 'index'. Either include them or remove the dependency array. If 'handleScrollToSelectedTitle' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["321"],["319"],["320"],"'useContext' is defined but never used.","'MessagesContext' is defined but never used.","'PlaylistsTrack' is defined but never used.","'PlaylistsCarousel' is defined but never used.","'PlaylistsTitleScrollContainer' is defined but never used.","'FiPause' is defined but never used.","'FiPlay' is defined but never used.","'FiSkipBack' is defined but never used.","'FiSkipForward' is defined but never used.","'tracks' is assigned a value but never used.","'updatePlaylistQueue' is defined but never used.","'updatePlaylistSelectedTitle' is defined but never used.","'resetPhases' is assigned a value but never used.","'useMousePosition' is defined but never used.","'PlaylistsThumbnail' is defined but never used.","React Hook useEffect has a missing dependency: 'setSelectedTrack'. Either include it or remove the dependency array. If 'setSelectedTrack' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["322"],"'IoArrowDown' is defined but never used.","'selectedTitle' is assigned a value but never used.","'setSelectedTitle' is assigned a value but never used.","'titleInQueue' is assigned a value but never used.","'setTitleInQueue' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'index' and 'updateSelectedPlaylistIndex'. Either include them or remove the dependency array. If 'updateSelectedPlaylistIndex' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["323"],"'updateSelectedTrack' is defined but never used.","'useRef' is defined but never used.","'useElementOnScreen' is defined but never used.","'selectedPlaylistTitle' is assigned a value but never used.","'setSelectedPlaylistTitle' is assigned a value but never used.","'Login' is defined but never used.","'Profile' is defined but never used.",["319"],["320"],"React Hook useEffect has missing dependencies: 'authorizationError', 'handleSpotifyAuthenticationError', 'isConfirmedCrossSiteAttack', and 'retrieveSpotifyAccessTokens'. Either include them or remove the dependency array.",["324"],"'React' is defined but never used.",["319"],["320"],"React Hook useEffect has missing dependencies: 'addContentToBeDisplayed', 'addToDisplayedContent', and 'incrementMessageValue'. Either include them or remove the dependency array.",["325"],"no-unused-vars","React Hook useEffect has a missing dependency: 'myRef'. Either include it or remove the dependency array.",["326"],"no-global-assign","no-unsafe-negation",{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},"Update the dependencies array to be: [titleRef, selectedPlaylistIndex, index, handleScrollToSelectedTitle]",{"range":"339","text":"340"},"Update the dependencies array to be: [track, setPlayingTrack, selectedPlaylistIndex, setSelectedTrack]",{"range":"341","text":"342"},"Update the dependencies array to be: [index, isVisible, updateSelectedPlaylistIndex]",{"range":"343","text":"344"},"Update the dependencies array to be: [authorizationError, handleSpotifyAuthenticationError, isConfirmedCrossSiteAttack, retrieveSpotifyAccessTokens, stateKey]",{"range":"345","text":"346"},"Update the dependencies array to be: [count, messages, finishedFunction, incrementMessagingPhase, addToDisplayedContent, addContentToBeDisplayed, incrementMessageValue]",{"range":"347","text":"348"},"Update the dependencies array to be: [delay, myRef]",{"range":"349","text":"350"},[1780,1813],"[titleRef, selectedPlaylistIndex, index, handleScrollToSelectedTitle]",[911,958],"[track, setPlayingTrack, selectedPlaylistIndex, setSelectedTrack]",[2885,2896],"[index, isVisible, updateSelectedPlaylistIndex]",[1793,1803],"[authorizationError, handleSpotifyAuthenticationError, isConfirmedCrossSiteAttack, retrieveSpotifyAccessTokens, stateKey]",[4865,4925],"[count, messages, finishedFunction, incrementMessagingPhase, addToDisplayedContent, addContentToBeDisplayed, incrementMessageValue]",[416,423],"[delay, myRef]"]