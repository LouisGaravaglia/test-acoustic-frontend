[{"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Home.tsx":"1","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Navbar.tsx":"2","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/index.js":"3","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Authorized.tsx":"4","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/ChattyDisplay.tsx":"5","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useViewport.js":"6","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsCarousel.tsx":"7","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsTitleScroll.tsx":"8","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useMessages.ts":"9","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsTrack.tsx":"10","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Buttons/ButtonsPast.tsx":"11","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesWrapper.tsx":"12","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesCurrent.tsx":"13","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Register.tsx":"14","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsContainer.tsx":"15","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsThumbnail.tsx":"16","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsCarouselContainer.tsx":"17","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsTitleScrollContainer.tsx":"18","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Routes.tsx":"19","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useChattyScript.tsx":"20","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/usePriorContent.tsx":"21","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useButtons.tsx":"22","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Buttons/ButtonsContainer.tsx":"23","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesTypingCursor.tsx":"24","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useInterval.js":"25","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useMousePosition.js":"26","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesContainer.tsx":"27","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/reportWebVitals.js":"28","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesPast.tsx":"29","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Buttons/ButtonsCurrent.tsx":"30"},{"size":1712,"mtime":1620336528211,"results":"31","hashOfConfig":"32"},{"size":1687,"mtime":1620515440676,"results":"33","hashOfConfig":"32"},{"size":595,"mtime":1618535218568,"results":"34","hashOfConfig":"32"},{"size":558,"mtime":1618165493000,"results":"35","hashOfConfig":"32"},{"size":1432,"mtime":1618165493000,"results":"36","hashOfConfig":"32"},{"size":743,"mtime":1618165493000,"results":"37","hashOfConfig":"32"},{"size":2904,"mtime":1620518203537,"results":"38","hashOfConfig":"32"},{"size":1270,"mtime":1620518638948,"results":"39","hashOfConfig":"32"},{"size":5185,"mtime":1620340234219,"results":"40","hashOfConfig":"32"},{"size":2526,"mtime":1620518439279,"results":"41","hashOfConfig":"32"},{"size":473,"mtime":1619389673713,"results":"42","hashOfConfig":"32"},{"size":213,"mtime":1618419198462,"results":"43","hashOfConfig":"32"},{"size":402,"mtime":1618419198214,"results":"44","hashOfConfig":"32"},{"size":2652,"mtime":1620340646619,"results":"45","hashOfConfig":"32"},{"size":2341,"mtime":1620518016540,"results":"46","hashOfConfig":"32"},{"size":563,"mtime":1620518490284,"results":"47","hashOfConfig":"32"},{"size":1272,"mtime":1620518105772,"results":"48","hashOfConfig":"32"},{"size":1456,"mtime":1620518545232,"results":"49","hashOfConfig":"32"},{"size":776,"mtime":1620426052469,"results":"50","hashOfConfig":"32"},{"size":3493,"mtime":1619316026969,"results":"51","hashOfConfig":"32"},{"size":1898,"mtime":1619360433269,"results":"52","hashOfConfig":"32"},{"size":3237,"mtime":1619661129946,"results":"53","hashOfConfig":"32"},{"size":635,"mtime":1618419119707,"results":"54","hashOfConfig":"32"},{"size":858,"mtime":1618419198396,"results":"55","hashOfConfig":"32"},{"size":457,"mtime":1618165493000,"results":"56","hashOfConfig":"32"},{"size":482,"mtime":1618956179931,"results":"57","hashOfConfig":"32"},{"size":5725,"mtime":1618419433743,"results":"58","hashOfConfig":"32"},{"size":362,"mtime":1611021517000,"results":"59","hashOfConfig":"32"},{"size":696,"mtime":1618419318459,"results":"60","hashOfConfig":"32"},{"size":415,"mtime":1619358924101,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"pu27ed",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Home.tsx",["130","131"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Navbar.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/index.js",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Authorized.tsx",["132","133"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/ChattyDisplay.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useViewport.js",[],["134","135"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsCarousel.tsx",["136","137"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsTitleScroll.tsx",["138","139","140"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useMessages.ts",["141"],"import React, {useContext} from 'react';\nimport {MessagesContext} from '../MessagesProvider';\n\ninterface IMessageObj {\n  id: string\n  messages: string[]\n}\n\n// type Hook = () => {\n//   initialMessages: IMessageObj,\n//   whatIfNoSpotify: IMessageObj,\n//   proceedWithoutSpotify: IMessageObj,\n//   registerUserPartOne: IMessageObj,\n//   registerUserPartTwo: IMessageObj,\n//   registerUserPartThree: IMessageObj,\n//   registerUserPartFour: IMessageObj,\n//   registerUserPartFive: IMessageObj,\n//   registerUserPartSix: IMessageObj,\n//   spotifyAccountValid: IMessageObj,\n//   secondFailedAttempt: IMessageObj,\n//   spotifyAccountError: IMessageObj\n// };\n\nfunction useMessages() {\n  const {user} = useContext(MessagesContext);\n  let userFirstName = user['first_name'] !== '' ? user['first_name'] : 'there';\n  const userUsername = user['username'] !== '' ? user['username'] : '';\n\n////////////////////////////////////////////////////  PRE BAKED MESSAGES FOR CHATTY  ////////////////////////////////////////////////////\n\n  // const initialMessages: IMessageObj = {\n  //   id: 'm1',\n  //   messages: [\n  //     `Hi, I'm Acoustigram.io, your digital companion. I'm here to share new music with you.`, \n  //     `If you're already a registered user you can login by clicking the link above.`,\n  //     `If you're new I'll walk you through setting up your Spotify Account.`,\n  //     `This will allow me to scan it for trends in your listening history to better assist me in suggesting the most relevant music for you.`\n  //   ]\n  // };\n\n  // CREATING SHORTER MESSAGES FOR QUICKER TESTING\n  const initialMessages: IMessageObj = {\n    id: 'm1',\n    messages: ['hi']\n  };\n\n  // const whatIfNoSpotify: IMessageObj = {\n  //   id: 'm2',\n  //   messages: [\n  //     'Being able to access your Spotify will help me create playlists that have a higher chance of being ones that you will enjoy.',\n  //     `Also, you'll be able to save playlists directly to your Spotify account without leaving our site.`,\n  //     `But don't worry if you don't have a Spotify account.`,\n  //     'I can still set up a profile for you and share playlists.',\n  //     `And I promise I won't share your information with anyone or alter your Spotify data other than saving playlists to your account.`\n  //   ]\n  // };\n\n    //CREATING SHORTER MESSAGES FOR QUICKER TESTING\n    const whatIfNoSpotify: IMessageObj = {\n      id: 'm1',\n      messages: ['hi']\n    };\n\n  const spotifyAccountError: IMessageObj = {\n    id: 'm3',\n    messages: [\n      'Oh no there was an error setting up your Spotify account!',\n      'Are you sure you entered the right info?',\n      'Or maybe you clicked cancel.',\n      'Do you want to try again or proceed without connecting your Spotify?'\n    ]\n  };\n\n  const proceedWithoutSpotify: IMessageObj = {\n    id: 'm4',\n    messages: [\n      `Sounds good, we won't connect a Spotify account.`,\n      'We can always add it later in your profile settings.'\n    ]\n  };\n\n  const secondFailedAttempt: IMessageObj = {\n    id: 'm5',\n    messages: [\n      `Dangit, it didn't work this time either.`,\n      `I'm just going to proceed without using Spotify.`,\n      'We can always add it later in your profile settings.'\n    ]\n  };\n\n  const spotifyAccountValid: IMessageObj = {\n    id: 'm6',\n    messages: [`Perfect, your Spotify account is all set up!`]\n  };\n\n  // const registerUserPartOne: IMessageObj = {\n  //   id: 'm7',\n  //   messages: [\n  //     `Ok, now we'll set up a profile for you.`, \n  //     'This will give us a place to continually add you new music as it comes out.',\n  //     `Let's start with your first name. You can use the input field below to enter it.`\n  //   ]\n  // };\n\n  //CREATING SHORTER MESSAGES FOR QUICKER TESTING\n  const registerUserPartOne: IMessageObj = {\n    id: 'm1',\n    messages: ['hi']\n  };\n\n  const registerUserPartTwo: IMessageObj = {\n    id: 'm8',\n    messages: [\n      `Hi ${userFirstName}!`,\n      `And what's your last name?`\n    ]\n  };\n\n  const registerUserPartThree: IMessageObj = {\n    id: 'm9',\n    messages: [\n      `Excellent. And what's your email address in case you get locked out.`,\n      `We promise we won't spam you with emails.`\n    ]\n  };\n\n  const registerUserPartFour: IMessageObj = {\n    id: 'm10',\n    messages: ['What would you like your username to be?']\n  };\n\n  const registerUserPartFive: IMessageObj = {\n    id: 'm11',\n    messages: [\n      `Ok ${userUsername} it is!`,\n      'And lastly, what would you like your password to be?'\n    ]\n  };\n\n  const registerUserPartSix: IMessageObj = {\n    id: 'm12',\n    messages: [\n      `Perfect, you're all set up!`,\n      `I'm taking you to your playlists now.`,\n      `Just keep in mind, this site is still in development so currently these playlists are just placeholders.`,\n      `You can not listen to the tracks quite yet. More to come soon!`\n    ]\n  };\n\n  return {\n    initialMessages,\n    whatIfNoSpotify,\n    proceedWithoutSpotify,\n    registerUserPartOne,\n    registerUserPartTwo,\n    registerUserPartThree,\n    registerUserPartFour,\n    registerUserPartFive,\n    registerUserPartSix,\n    spotifyAccountError,\n    spotifyAccountValid,\n    secondFailedAttempt\n  };\n};\n\nexport default useMessages;",["142","143"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsTrack.tsx",["144"],"import React, {useState, useEffect} from 'react';\nimport {IoPlayCircleOutline, IoPauseCircleOutline, IoPlaySkipForward, IoPlaySkipBack} from 'react-icons/io5';\n\ninterface Props {\n  track: any\n  index: number\n  selectedTrack: number\n  setSelectedTrack: (index: number) => void\n  selectedPlaylistIndex: number\n  playlistLength: number\n}\n\nfunction PlaylistsTrack({track, index, selectedTrack, setSelectedTrack, selectedPlaylistIndex, playlistLength}: Props): JSX.Element {\n  const [playingTrack, setPlayingTrack] = useState(true);\n\n  useEffect(() => {\n    function resetTrackVariables() {\n      setPlayingTrack(true);\n      setSelectedTrack(0);\n    }\n\n    resetTrackVariables();\n  }, [track, setPlayingTrack, selectedPlaylistIndex])\n\n\n  function togglePlayingTrack() {\n    setPlayingTrack(state => !state)\n  }\n\n  let styles: React.CSSProperties;\n\n  if (selectedTrack === index){\n    styles = { \n      top: `${(index * 60)}px`,\n      padding: '40px',\n      left: '-40px',\n      width: 'calc(100% - 120px)',\n      cursor: 'default',\n      border: '1px solid #181718',\n    };\n  } else if (index > selectedTrack) {\n    styles = { top: `${(index * 60) + 80}px`};\n  } else {\n    styles = { top: `${(index * 60)}px`};\n  }\n\n  let playTrackControls: JSX.Element;\n\n  playTrackControls = (\n    <>\n      <div className=\"Playlists-ControlBtns-Container\">\n        <div className=\"Playlists-PlayBtn-Box\" onClick={() => setSelectedTrack(selectedTrack === 0 ? selectedTrack : selectedTrack - 1)}>\n          <IoPlaySkipBack className='Playlists-PrevBtn-Icon'/>\n        </div>\n        <div className=\"Playlists-PlayBtn-Box\" onClick={togglePlayingTrack}>\n          {playingTrack ? <IoPauseCircleOutline className='Playlists-PlayBtn-Icon'/> : <IoPlayCircleOutline className='Playlists-PlayBtn-Icon'/>}\n        </div>\n        <div className=\"Playlists-PlayBtn-Box\">\n          <IoPlaySkipForward className='Playlists-NextBtn-Icon' onClick={() => setSelectedTrack(selectedTrack === playlistLength - 1 ? selectedTrack : selectedTrack + 1)}/>\n        </div>\n      </div>\n    </>\n  )\n\n  return (\n    <>\n      <div key={track.track.id} className='Playlists-Track-Container' style={styles} >\n        <div className=\"Playlists-Track-Box\" onClick={() => setSelectedTrack(index)}>\n          <p className='Playlists-Track-Name'>{track.track.name}</p>\n          <p className='Playlists-Artist-Name'>{track.track.artists[0].name}</p>\n        </div>\n        {selectedTrack === index && playTrackControls}\n      </div>\n    </>\n  );\n};\n\nexport default PlaylistsTrack;","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Buttons/ButtonsPast.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesWrapper.tsx",[],["145","146"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesCurrent.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Register.tsx",["147"],"import React, {useState, useContext} from 'react';\nimport { FaArrowRight } from 'react-icons/fa';\nimport { IoIosArrowRoundForward } from 'react-icons/io';\nimport {MessagesContext} from './MessagesProvider';\nimport ButtonsPast from './Buttons/ButtonsPast';\n\ninterface Props {\n  input: string\n}\n\ninterface IUser {\n  first_name: string\n  last_name: string\n  email: string\n  username: string\n  password: string\n  access_token: string\n  refresh_token: string\n}\n\nfunction Register({input}: Props) {\n  const {user, incrementMessagingPhase, updateUser, addContentToBeDisplayed, chattyMessagesPhase} = useContext(MessagesContext);\n  //CHANGING THE INPUT VALUE BEING PASSED AS A PROP TO THE FORMAT FOR THE \n  //ASSOCIATED PROPERTY NAME ON OUR CONTEXT PROVIDER\n  const inputName = input.replace(' ', '_')\n  const [formData, setFormData] = useState({[inputName]: ''});\n  const inputType = input === 'password' ? 'password' : 'text';\n\n  //UPDATING THE VALUE ON OUR INPUT AS THE USER TYPES\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n    const {name, value} = e.target as HTMLTextAreaElement;\n    setFormData(data => ({\n      ...data,\n      [name]:value\n    }));\n  };\n\n  const handleSubmit = async () => {\n    // e.preventDefault();\n    if (formData[inputName] === '') return;\n    user[inputName as keyof IUser] = formData[inputName]\n    updateUser(inputName, formData[inputName]);\n    const hiddenPassword = '\\u{2022}'.repeat(user.password.length);\n    addContentToBeDisplayed([<ButtonsPast key={'r' + chattyMessagesPhase} buttonText={inputName === 'password' ? hiddenPassword : formData[inputName]}/>])\n    incrementMessagingPhase(1);\n  };\n\n////////////////////////////////////////////////////  RETURN  ////////////////////////////////////////////////////\n\n  return (\n    <div className='Register-Container'>\n      <form className='Register-Form' onSubmit={handleSubmit}>\n        <div className='Register-Box'>\n          <input \n            type={inputType}\n            id='RegisterVal'\n            placeholder={input}\n            name={inputName}\n            value={formData[inputName]}\n            onChange={handleChange}\n            className='Register-Form-Input'\n          />\n  \n          <button type='submit'>\n            <IoIosArrowRoundForward color='#181718' />\n          </button>\n        </div>\n\n      </form>\n\n      {/* <div className=\"Register-Button-Container\">\n        <button className=\"Register-Button-Box\" onClick={handleSubmit}>\n          <div className=\"Register-Button-Overlay\"></div>\n          <h1 className=\"Register-Button\">Submit</h1>\n        </button>\n      </div> */}\n\n    </div>\n  );\n};\n\nexport default Register;","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsContainer.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsThumbnail.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsCarouselContainer.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/PlaylistsTitleScrollContainer.tsx",["148","149","150","151"],"import React, {useState, useRef, createRef} from 'react';\nimport PlaylistsTitleScroll from './PlaylistsTitleScroll';\nlet playlists =  require('../fakeData/playlist.json');\n\ninterface Props {\n  selectedPlaylistIndex: number\n  reversePlaylists: boolean\n}\nfunction PlaylistsTitleScrollContainer({selectedPlaylistIndex, reversePlaylists}: Props): JSX.Element {\n  const [parentFinishedMounting, setParentFinishedMounting] = useState<boolean>(false);\n  const wrapperRef = useRef<any | null>(null);\n  const titleRefArray = playlists.map((playlist:any) => createRef());\n\n  function handleScrollToSelectedTitle(titleRef: any | null) {\n    console.log('handleScroll', titleRef);\n    if (titleRef.current !== null) {\n      console.log('offsetLeft', titleRef.current.offsetLeft);\n      //TODO: MAKE MEDIA QUERY THAT LOWER'S THE AMOUNT SUBTRACTING FROM TITLEREF OFFSET VALUE\n      wrapperRef.current.scroll({left: titleRef.current.offsetLeft - 300, behavior: 'smooth'});\n    }\n  }\n\n  return (\n    <div className=\"scrolling-wrapper\" ref={wrapperRef}>\n      <div className='card' ><h2 ></h2></div>\n        {playlists.map((playlist: any, index: any) => <PlaylistsTitleScroll key={index} index={index} titleRef={titleRefArray[index]} playlist={playlist} selectedPlaylistIndex={selectedPlaylistIndex} handleScrollToSelectedTitle={handleScrollToSelectedTitle}/>)}\n      <div className='card' ><h2 ></h2></div>\n    </div>\n  );\n};\n\nexport default PlaylistsTitleScrollContainer;","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Routes.tsx",["152","153"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useChattyScript.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/usePriorContent.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useButtons.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Buttons/ButtonsContainer.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesTypingCursor.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useInterval.js",["154","155"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useMousePosition.js",[],["156","157"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesContainer.tsx",["158"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/reportWebVitals.js",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Messages/MessagesPast.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Buttons/ButtonsCurrent.tsx",["159","160"],{"ruleId":"161","severity":1,"message":"162","line":1,"column":16,"nodeType":"163","messageId":"164","endLine":1,"endColumn":25},{"ruleId":"161","severity":1,"message":"165","line":9,"column":10,"nodeType":"163","messageId":"164","endLine":9,"endColumn":21},{"ruleId":"161","severity":1,"message":"166","line":6,"column":9,"nodeType":"163","messageId":"164","endLine":6,"endColumn":13},{"ruleId":"161","severity":1,"message":"167","line":7,"column":9,"nodeType":"163","messageId":"164","endLine":7,"endColumn":14},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":66,"column":6,"nodeType":"174","endLine":66,"endColumn":17,"suggestions":"175"},{"ruleId":"161","severity":1,"message":"176","line":68,"column":12,"nodeType":"163","messageId":"164","endLine":68,"endColumn":31},{"ruleId":"161","severity":1,"message":"177","line":21,"column":5,"nodeType":"163","messageId":"164","endLine":21,"endColumn":23},{"ruleId":"161","severity":1,"message":"178","line":22,"column":5,"nodeType":"163","messageId":"164","endLine":22,"endColumn":24},{"ruleId":"172","severity":1,"message":"179","line":33,"column":8,"nodeType":"174","endLine":33,"endColumn":41,"suggestions":"180"},{"ruleId":"161","severity":1,"message":"181","line":1,"column":8,"nodeType":"163","messageId":"164","endLine":1,"endColumn":13},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"182","line":23,"column":6,"nodeType":"174","endLine":23,"endColumn":53,"suggestions":"183"},{"ruleId":"168","replacedBy":"184"},{"ruleId":"170","replacedBy":"185"},{"ruleId":"161","severity":1,"message":"186","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":22},{"ruleId":"161","severity":1,"message":"187","line":10,"column":10,"nodeType":"163","messageId":"164","endLine":10,"endColumn":32},{"ruleId":"161","severity":1,"message":"188","line":10,"column":34,"nodeType":"163","messageId":"164","endLine":10,"endColumn":59},{"ruleId":"189","severity":1,"message":"190","line":25,"column":30,"nodeType":"191","endLine":25,"endColumn":35},{"ruleId":"189","severity":1,"message":"190","line":27,"column":30,"nodeType":"191","endLine":27,"endColumn":35},{"ruleId":"161","severity":1,"message":"192","line":5,"column":8,"nodeType":"163","messageId":"164","endLine":5,"endColumn":13},{"ruleId":"161","severity":1,"message":"193","line":6,"column":8,"nodeType":"163","messageId":"164","endLine":6,"endColumn":15},{"ruleId":"194","severity":1,"message":"181","line":1,"column":8,"nodeType":"163","messageId":"164","endLine":1,"endColumn":13},{"ruleId":"172","severity":1,"message":"195","line":20,"column":6,"nodeType":"174","endLine":20,"endColumn":13,"suggestions":"196"},{"ruleId":"168","replacedBy":"184"},{"ruleId":"170","replacedBy":"185"},{"ruleId":"172","severity":1,"message":"197","line":105,"column":6,"nodeType":"174","endLine":105,"endColumn":66,"suggestions":"198"},{"ruleId":"161","severity":1,"message":"162","line":1,"column":16,"nodeType":"163","messageId":"164","endLine":1,"endColumn":25},{"ruleId":"161","severity":1,"message":"199","line":1,"column":27,"nodeType":"163","messageId":"164","endLine":1,"endColumn":33},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'resetPhases' is assigned a value but never used.","'code' is assigned a value but never used.","'state' is assigned a value but never used.","no-native-reassign",["200"],"no-negated-in-lhs",["201"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'index' and 'updateSelectedPlaylistIndex'. Either include them or remove the dependency array. If 'updateSelectedPlaylistIndex' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["202"],"'updateSelectedTrack' is defined but never used.","'leftSideOfTitleDiv' is assigned a value but never used.","'rightSideOfTitleDiv' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleScrollToSelectedTitle' and 'index'. Either include them or remove the dependency array. If 'handleScrollToSelectedTitle' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["203"],"'React' is defined but never used.","React Hook useEffect has a missing dependency: 'setSelectedTrack'. Either include it or remove the dependency array. If 'setSelectedTrack' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["204"],["200"],["201"],"'FaArrowRight' is defined but never used.","'parentFinishedMounting' is assigned a value but never used.","'setParentFinishedMounting' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Login' is defined but never used.","'Profile' is defined but never used.","no-unused-vars","React Hook useEffect has a missing dependency: 'myRef'. Either include it or remove the dependency array.",["205"],"React Hook useEffect has missing dependencies: 'addContentToBeDisplayed', 'addToDisplayedContent', and 'incrementMessageValue'. Either include them or remove the dependency array.",["206"],"'useRef' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},"Update the dependencies array to be: [index, isVisible, updateSelectedPlaylistIndex]",{"range":"217","text":"218"},"Update the dependencies array to be: [titleRef, selectedPlaylistIndex, index, handleScrollToSelectedTitle]",{"range":"219","text":"220"},"Update the dependencies array to be: [track, setPlayingTrack, selectedPlaylistIndex, setSelectedTrack]",{"range":"221","text":"222"},"Update the dependencies array to be: [delay, myRef]",{"range":"223","text":"224"},"Update the dependencies array to be: [count, messages, finishedFunction, incrementMessagingPhase, addToDisplayedContent, addContentToBeDisplayed, incrementMessageValue]",{"range":"225","text":"226"},[2165,2176],"[index, isVisible, updateSelectedPlaylistIndex]",[1050,1083],"[titleRef, selectedPlaylistIndex, index, handleScrollToSelectedTitle]",[681,728],"[track, setPlayingTrack, selectedPlaylistIndex, setSelectedTrack]",[416,423],"[delay, myRef]",[4865,4925],"[count, messages, finishedFunction, incrementMessagingPhase, addToDisplayedContent, addContentToBeDisplayed, incrementMessageValue]"]