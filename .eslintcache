[{"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/ChatBot/ChattyDisplay.tsx":"1","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Hooks/useInterval.js":"2","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Hooks/useViewport.js":"3","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/Profile.tsx":"4","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/Home.tsx":"5","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/ChatBot/helpers/useMessages.ts":"6","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/ChatBot/helpers/useButtons.tsx":"7","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/Login.tsx":"8","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/reportWebVitals.js":"9","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Chatty.tsx":"10","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Backend.ts":"11","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useSpotifyAuth.tsx":"12","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/DisplayedButton.tsx":"13","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useButtons.tsx":"14","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useInterval.js":"15","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/MessagesProvider.tsx":"16","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Profile.tsx":"17","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/usePriorContent.tsx":"18","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/MessageWrapper.tsx":"19","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Navbar.tsx":"20","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Login.tsx":"21","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/DisplayedMessage.tsx":"22","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/App.tsx":"23","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Home.tsx":"24","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/ChattyDisplay.tsx":"25","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useViewport.js":"26","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/ButtonWrapper.tsx":"27","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Authorized.tsx":"28","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Register.tsx":"29","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Routes.tsx":"30","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useMessages.ts":"31","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/index.js":"32","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useChattyScript.tsx":"33"},{"size":4376,"mtime":1617311333380,"results":"34","hashOfConfig":"35"},{"size":457,"mtime":1614464632602,"results":"36","hashOfConfig":"35"},{"size":743,"mtime":1617312694780,"results":"37","hashOfConfig":"35"},{"size":826,"mtime":1617312536842,"results":"38","hashOfConfig":"35"},{"size":1324,"mtime":1617312694778,"results":"39","hashOfConfig":"35"},{"size":4859,"mtime":1617312694778,"results":"40","hashOfConfig":"35"},{"size":3035,"mtime":1617318716841,"results":"41","hashOfConfig":"35"},{"size":1911,"mtime":1617321900873,"results":"42","hashOfConfig":"35"},{"size":362,"mtime":1611021517246,"results":"43","hashOfConfig":"44"},{"size":5293,"mtime":1618106243179,"results":"45","hashOfConfig":"44"},{"size":2984,"mtime":1618106138592,"results":"46","hashOfConfig":"44"},{"size":1881,"mtime":1618106673134,"results":"47","hashOfConfig":"44"},{"size":457,"mtime":1618106263807,"results":"48","hashOfConfig":"44"},{"size":3380,"mtime":1618106364563,"results":"49","hashOfConfig":"44"},{"size":457,"mtime":1618106685214,"results":"50","hashOfConfig":"44"},{"size":4154,"mtime":1618106280494,"results":"51","hashOfConfig":"44"},{"size":853,"mtime":1618106217242,"results":"52","hashOfConfig":"44"},{"size":1993,"mtime":1618106662046,"results":"53","hashOfConfig":"44"},{"size":6164,"mtime":1618106804530,"results":"54","hashOfConfig":"44"},{"size":716,"mtime":1618106208445,"results":"55","hashOfConfig":"44"},{"size":1915,"mtime":1618106189247,"results":"56","hashOfConfig":"44"},{"size":434,"mtime":1618106271087,"results":"57","hashOfConfig":"44"},{"size":451,"mtime":1618105936127,"results":"58","hashOfConfig":"44"},{"size":1318,"mtime":1618106178550,"results":"59","hashOfConfig":"44"},{"size":1432,"mtime":1618106257246,"results":"60","hashOfConfig":"44"},{"size":743,"mtime":1618106691464,"results":"61","hashOfConfig":"44"},{"size":706,"mtime":1618106234460,"results":"62","hashOfConfig":"44"},{"size":558,"mtime":1618106168853,"results":"63","hashOfConfig":"44"},{"size":2339,"mtime":1618106328516,"results":"64","hashOfConfig":"44"},{"size":703,"mtime":1618106225978,"results":"65","hashOfConfig":"44"},{"size":4844,"mtime":1618106624430,"results":"66","hashOfConfig":"44"},{"size":595,"mtime":1612052359689,"results":"67","hashOfConfig":"44"},{"size":3411,"mtime":1618106392379,"results":"68","hashOfConfig":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},"1i4blhn",{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"pu27ed",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/ChatBot/ChattyDisplay.tsx",["140"],"import React, {useContext, useRef, useEffect} from \"react\";\nimport {MessagesContext} from \"./MessagesProvider\";\nimport MessageWrapper from \"./MessageWrapper\";\nimport ButtonWrapper from \"./ButtonWrapper\";\nimport Register from \"./Register\";\nimport useMessages from \"./helpers/useMessages\";\nimport useButtons from \"./helpers/useButtons\";\nimport {useHistory} from \"react-router-dom\";\nimport Backend from \"../../Backend\";\n// import useWindowDimensions from \"../../Hooks/useWindowDimensions\";\nimport useViewport from \"../../Hooks/useViewport\";\n\n//HOLDS ALL THE MESSAGE WRAPPER AND BUTTON WRAPPER COMPONENTS NEEDED TO BUILD THE \n//CONVERSATION CHATTY WILL HAVE WITH OUR USER\nfunction ChattyDisplay(): JSX.Element {\n  const scrollToBottomRef = useRef<any | null>();\n  const history = useHistory();\n  const {user, chattyMessagesPhase, displayedContent} = useContext(MessagesContext);\n  const {viewportHeight}  = useViewport();\n  const {initialButtons, proceedWithoutSpotifyButtons, tryAgainButtons} = useButtons();\n  const {\n    initialMessages,\n    whatIfNoSpotify,\n    spotifyAccountError,\n    proceedWithoutSpotify,\n    secondFailedAttempt,\n    spotifyAccountValid,\n    registerUserPartOne,\n    registerUserPartTwo,\n    registerUserPartThree,\n    registerUserPartFour,\n    registerUserPartFive,\n    registerUserPartSix,\n  } = useMessages();\n\n  //FINISHED FUNCTION THAT WILL WILL RUN ONCE CHATTY HAS SENT THE FINAL MESSAGE TO REDIRECT TO USER PROFILE\n  const redirectToProfile = (val: boolean) => {\n    if (val === true) history.push(\"/profile\");\n    try {\n      Backend.registerUser(user);\n    } catch(e) {\n      //add flash message functionality if registering user fails\n    }\n  };\n\n///////////////////////////////////////////////  CHATTY SCRIPT  /////////////////////////////////////////////////\n\n  //ALL POSSIBLE MESSAGE AND BUTTON OPTIONS THAT CHATTY CAN DISPLAY TO THE USER\n  //THROUGH THE CHATTYMESSAGEPHASE VARIABLE WE WILL NAVIGATE TO THE NECESSARY ITEM TO DISPLAY\n  const chattyScript = [\n    <MessageWrapper key={initialMessages.id} messages={initialMessages.messages}/>,\n    <ButtonWrapper key={initialButtons.id} buttons={initialButtons.buttons}/>,\n    <MessageWrapper key={whatIfNoSpotify.id} messages={whatIfNoSpotify.messages}/>,\n    <ButtonWrapper key={proceedWithoutSpotifyButtons.id} buttons={proceedWithoutSpotifyButtons.buttons}/>,\n    <MessageWrapper key={spotifyAccountError.id} messages={spotifyAccountError.messages}/>,\n    <ButtonWrapper key={tryAgainButtons.id} buttons={tryAgainButtons.buttons}/>,\n    <MessageWrapper key={proceedWithoutSpotify.id} messages={proceedWithoutSpotify.messages} incrementMessageValue={3}/>,\n    <MessageWrapper key={secondFailedAttempt.id} messages={secondFailedAttempt.messages} incrementMessageValue={2}/>,\n    <MessageWrapper key={spotifyAccountValid.id} messages={spotifyAccountValid.messages}/>,\n    <MessageWrapper key={registerUserPartOne.id} messages={registerUserPartOne.messages}/>,\n    <Register key={\"first name\"} input=\"first name\"/>,\n    <MessageWrapper key={registerUserPartTwo.id} messages={registerUserPartTwo.messages}/>,\n    <Register key={\"last name\"} input=\"last name\"/>,\n    <MessageWrapper key={registerUserPartThree.id} messages={registerUserPartThree.messages}/>,\n    <Register key={\"email\"} input=\"email\"/>,\n    <MessageWrapper key={registerUserPartFour.id} messages={registerUserPartFour.messages}/>,\n    <Register key={\"username\"} input=\"username\"/>,\n    <MessageWrapper key={registerUserPartFive.id} messages={registerUserPartFive.messages}/>,\n    <Register key={\"password\"} input=\"password\"/>,\n    <MessageWrapper key={registerUserPartSix.id} messages={registerUserPartSix.messages} finishedFunction={redirectToProfile}/>,\n  ]\n\n///////////////////////////////////////////////  RETURN JSX  /////////////////////////////////////////////////\n\n  return (\n    <div className=\"Chatty-Container\" >\n      <div className=\"Chatty\" style={{maxHeight: viewportHeight - 200}}>\n        <div className=\"Chatty-Left-Filler\"></div>\n        <div className=\"Chatty-Display\">\n          {displayedContent.map((item, index) => <div key={index}>{item}</div>)}\n          {chattyScript[chattyMessagesPhase]}\n          <div className=\"Chatty-MSG-Bottom-Filler\" ref={scrollToBottomRef}></div>\n        </div>\n        <div className=\"Chatty-Right-Filler\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChattyDisplay;","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Hooks/useInterval.js",["141","142"],"import React, {useRef, useEffect} from \"react\";\n\nconst useInterval = (callback, delay, myRef) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n\n    function tick() {\n      savedCallback.current();\n    };\n\n    if (delay !== null) {\n      myRef.current = setInterval(tick, delay);\n      return () => clearInterval(myRef.current);\n    };\n  }, [delay]);\n};\n\nexport default useInterval;","/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Hooks/useViewport.js",[],"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/Profile.tsx",["143"],"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/Home.tsx",["144"],"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/ChatBot/helpers/useMessages.ts",["145"],"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/ChatBot/helpers/useButtons.tsx",[],"/Users/louieg3/Documents/Web_development/acoustic-companion/frontend/src/Components/Login.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/reportWebVitals.js",[],["146","147"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Chatty.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Backend.ts",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useSpotifyAuth.tsx",["148"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/DisplayedButton.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useButtons.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useInterval.js",["149","150"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/MessagesProvider.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Profile.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/usePriorContent.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/MessageWrapper.tsx",["151"],"import React, {useState, useRef, useEffect, useContext} from 'react';\nimport useInterval from '../../Hooks/useInterval';\nimport {MessagesContext} from './MessagesProvider';\nimport DisplayedMessage from './DisplayedMessage';\n\n//DEFINING THE CONTRACT FOR THE VARIABLE TYPES THAT WILL BE PASSED IN VIA PROPS\ninterface Props {\n  messages: Array<string>\n  finishedFunction?: (val: boolean) => void\n  addToDisplayedContent?: boolean\n  incrementMessageValue?: number\n};\n\n//OUR COMPONENT THAT ACCEPTS THE APPROPRIATE MESSAGES NEEDED FOR OUR CHATTY RESPONSE AND\n//APPENDS THEM TO THE DOM ONE LETTER AT A TIME\nfunction MessageWrapper({messages, finishedFunction, addToDisplayedContent = true, incrementMessageValue = 1}: Props): JSX.Element {\n  const [displayedMessages, setDisplayedMessages] = useState<Array<string>>([]);\n  const [createMessage, setCreateMessage] = useState<string>('');\n  const [count, setCount] = useState<number>(0);\n  const [messageCharLength, setMessageCharLength] = useState<number>(0);\n  const [charLength, setCharLength] = useState<number>(0);\n  const [delayValue, setDelayValue] = useState<number>(100);\n  const [isRunning, setIsRunning] = useState<boolean>(true);\n  const [finishedMessages, setFinishedMessages] = useState<boolean>(false);\n  const [onLastMessage, setOnLastMessage] = useState<boolean>(false);\n  const {incrementMessagingPhase, addContentToBeDisplayed} = useContext(MessagesContext);\n  const useIntervalId = useRef<any | null>();\n  const scrollToBottomRef = useRef<any | null>();\n  const timeoutId = useRef<any | null>();\n  const typingCursor: string = ' \\u{258C}';\n  let typingCursorJSX: JSX.Element;\n\n  //SCROLL DOWN TO END OF MESSAGE TYPING TO KEEP MESSAGES IN VIEWPORT WHILE CHATTY IS TYPING\n  useEffect(() => {\n    const scrollToBottom = () => {\n      scrollToBottomRef.current.scrollIntoView({behavior: 'smooth'});\n    };\n    if (count < messages.length && !finishedMessages) scrollToBottom();\n  }, [count, finishedMessages, messages]);\n\n  //FUNCTION TO PASS TO OUR USEINTERVAL HOOK TO APPEND A LETTER AT A TIME TO CREATEMESSAGE\n  //IN ORDER TO CREATE THE LOOK AS IF OUR CHAT BOT WAS TYPING\n  function appendMessages() {\n    setMessageCharLength(messages[count].length);\n    const msgWithNewLetterAdded: string = messages[count].substring(charLength, charLength + 1);\n    const msgWithRemovedCursor = createMessage.slice(0, -2);\n    setCreateMessage(msgWithRemovedCursor + msgWithNewLetterAdded + typingCursor);\n    setCharLength(length => length + 1);\n    //CHANGING THE DELAY VALUE AFTER EACH LETTER APPENDED TO SCREEN IN ORDER TO TRY\n    //AND CREATE A MORE HUMAN VARIABLE TYPING SPEED\n    setDelayValue(Math.floor(Math.random() * 60) + 1);\n  };\n\n  // CALLING THE USEINTERVAL HOOK TO BE ABLE TO DYNAMICALLY ALTER THE DELAY FOR OUR INTERVAL\n  useInterval(appendMessages, isRunning ? delayValue : null, useIntervalId);\n\n  //SET TIMEOUT TO UPDATE ISRUNNING VARAIBLE TO TRUE AFTER A BRIEF PAUSE TO SPACE OUT CHATTY'S MESSAGES\n  useEffect(() => {\n\n    if (isRunning) return;\n    //IF ALL MESSAGES HAVE BEEN APPENDED TO OUR DOM DON'T NEED TO UPDATE COUNT OR CHANGE ISRUNNING\n    if (count >= messages.length && count !== 0) return;\n\n    timeoutId.current = setTimeout(() => {\n      setIsRunning(true);\n      //MOVED SETCOUNT TO BE INSIDE THIS TIMEOUT AS A WAY TO PREVENT AN INFINITE LOOP\n      //SINCE THIS EXECUTES RIGHT BEFORE COUNT IS SET BACK TO ZERO WHICH NEVER TRIGGERS\n      //THE CLEAR INTERVAL USE EFFECT\n      setCount(num => num + 1);\n    }, 500);\n\n    return () => clearTimeout(timeoutId.current);\n  },[isRunning, count, messages]);\n\n  //USEEFFECT THAT WILL RESET CREATEMESSAGE TO AN EMPTY STRING ONCE THE MESSAGE IS FINISHED\n  //AND THEN APPEND THAT MESSAGE TO DISPLAYEDMESSAGES TO APPEND TO THE DOM \n  useEffect(() => {\n\n    if (charLength >= messageCharLength && messageCharLength !== 0) {\n      const msgWithRemovedCursor = createMessage.slice(0, -2);\n      setDisplayedMessages(state => [...state, msgWithRemovedCursor]);\n      setCreateMessage('');\n      setCharLength(0);\n      setIsRunning(false);\n    };\n  }, [setCount, charLength, setCharLength, messageCharLength, setDisplayedMessages, setCreateMessage, createMessage]);\n\n  //USEEFFECT THAT WILL CLEAR THE USEINTERVAL TIMER WHEN ALL MESSAGES PASSED IN TO OUR \n  //MESSAGE WRAPPER COMPONENT HAVE FINISHED APPENDING TO THE DOM\n  useEffect(() => {\n\n    if (count >= messages.length && count !== 0) {\n      clearInterval(useIntervalId.current);\n      setCount(0);\n      setCharLength(0);  \n      setFinishedMessages(true);\n      if (finishedFunction) finishedFunction(true);\n      if (addToDisplayedContent) {\n        addContentToBeDisplayed([<DisplayedMessage messages={messages}/>])\n        incrementMessagingPhase(incrementMessageValue);\n      }\n    };\n  }, [count, messages, finishedFunction, incrementMessagingPhase]);\n\n  //UPDATING ONLASTMESSAGE TO BE TRUE TO PREVENT TYPING CURSOR TO APPEAR AFTER THE LAST MESSAGE\n  useEffect(() => {\n    const preventTypingCursor = () => {\n      setOnLastMessage(true);\n    };\n\n    if (count === messages.length - 1) preventTypingCursor();\n  }, [count, setOnLastMessage, messages]);\n\n  //NEEDED TO SEPARATE OUT ONLASTMESSAGE FROM THE INLINE CONDITIONAL IN JSX SINCE THERE SCROLLINTOVIEW WOULD\n  //SOMETIMES CAUSE AN ERROR SINCE JSX WOULDNT BE IN VIEW FOR AT TIMES\n  if (onLastMessage) {\n    typingCursorJSX = <div ref={scrollToBottomRef}></div>;\n  } else {\n    typingCursorJSX = (\n      <>\n      {!isRunning && <div className='Chatty-Message-Box' ref={scrollToBottomRef}><p className='Chatty-Message'>{typingCursor}</p></div>}\n      {isRunning && <div className='Chatty-Message-Box' ref={scrollToBottomRef}><p className='Chatty-Message-Black'>‎‎_</p></div>}\n      </>\n    )\n  };\n\n  // RETURNING JSX\n  return (\n    <div className='Chatty-Message-Container'>\n      {displayedMessages && displayedMessages.map((item, index) => <div key={index} className='Chatty-Message-Box'><p className='Chatty-Message'>{item}</p></div>)}\n      {createMessage && <div className='Chatty-Message-Box'><p className='Chatty-Message'>{createMessage}</p></div>}\n      {typingCursorJSX}\n    </div>\n  );\n};\n\nexport default MessageWrapper;","/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Navbar.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Login.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/DisplayedMessage.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/App.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Home.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/ChattyDisplay.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Hooks/useViewport.js",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/ButtonWrapper.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Authorized.tsx",["152","153"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/Register.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/Routes.tsx",[],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useMessages.ts",["154"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/index.js",[],["155","156"],"/Users/louieg3/Documents/Web_development/test-acoustic-frontend/src/Components/ChatBot/helpers/useChattyScript.tsx",[],{"ruleId":"157","severity":1,"message":"158","line":1,"column":36,"nodeType":"159","messageId":"160","endLine":1,"endColumn":45},{"ruleId":"161","severity":1,"message":"162","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":13},{"ruleId":"163","severity":1,"message":"164","line":20,"column":6,"nodeType":"165","endLine":20,"endColumn":13,"suggestions":"166"},{"ruleId":"157","severity":1,"message":"167","line":4,"column":11,"nodeType":"159","messageId":"160","endLine":4,"endColumn":16},{"ruleId":"157","severity":1,"message":"168","line":2,"column":9,"nodeType":"159","messageId":"160","endLine":2,"endColumn":13},{"ruleId":"157","severity":1,"message":"162","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":13},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"157","severity":1,"message":"162","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":13},{"ruleId":"161","severity":1,"message":"162","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":13},{"ruleId":"163","severity":1,"message":"164","line":20,"column":6,"nodeType":"165","endLine":20,"endColumn":13,"suggestions":"173"},{"ruleId":"163","severity":1,"message":"174","line":103,"column":6,"nodeType":"165","endLine":103,"endColumn":66,"suggestions":"175"},{"ruleId":"157","severity":1,"message":"176","line":6,"column":9,"nodeType":"159","messageId":"160","endLine":6,"endColumn":13},{"ruleId":"157","severity":1,"message":"177","line":7,"column":9,"nodeType":"159","messageId":"160","endLine":7,"endColumn":14},{"ruleId":"157","severity":1,"message":"162","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":13},{"ruleId":"169","replacedBy":"178"},{"ruleId":"171","replacedBy":"179"},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-unused-vars","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'myRef'. Either include it or remove the dependency array.","ArrayExpression",["180"],"'IUser' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["181"],"no-negated-in-lhs",["182"],["183"],"React Hook useEffect has missing dependencies: 'addContentToBeDisplayed', 'addToDisplayedContent', and 'incrementMessageValue'. Either include them or remove the dependency array.",["184"],"'code' is assigned a value but never used.","'state' is assigned a value but never used.",["181"],["182"],{"desc":"185","fix":"186"},"no-global-assign","no-unsafe-negation",{"desc":"185","fix":"187"},{"desc":"188","fix":"189"},"Update the dependencies array to be: [delay, myRef]",{"range":"190","text":"191"},{"range":"192","text":"191"},"Update the dependencies array to be: [count, messages, finishedFunction, incrementMessagingPhase, addToDisplayedContent, addContentToBeDisplayed, incrementMessageValue]",{"range":"193","text":"194"},[416,423],"[delay, myRef]",[416,423],[4768,4828],"[count, messages, finishedFunction, incrementMessagingPhase, addToDisplayedContent, addContentToBeDisplayed, incrementMessageValue]"]